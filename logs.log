2021-01-11 02:00:47,088:INFO:PyCaret Supervised Module
2021-01-11 02:00:47,088:INFO:ML Usecase: regression
2021-01-11 02:00:47,088:INFO:version 2.2.3
2021-01-11 02:00:47,088:INFO:Initializing setup()
2021-01-11 02:00:47,088:INFO:setup(display=None, profile_kwargs=None, profile=False, verbose=True, silent=False, log_data=False, log_profile=False, log_plots=False, experiment_name=diamond1, log_experiment=True, session_id=123, html=True, custom_pipeline=None, use_gpu=False, n_jobs=-1, fold_groups=None, fold_shuffle=False, fold=10, fold_strategy=kfold, data_split_stratify=False, data_split_shuffle=True, transform_target_method=box-cox, transform_target=True, fix_imbalance_method=None, fix_imbalance=False, interaction_threshold=0.01, feature_ratio=False, feature_interaction=False, feature_selection_method=classic, feature_selection_threshold=0.8, feature_selection=False, group_names=None, group_features=None, polynomial_threshold=0.1, trigonometry_features=False, polynomial_degree=2, polynomial_features=False, cluster_iter=20, create_clusters=False, remove_perfect_collinearity=True, multicollinearity_threshold=0.95, remove_multicollinearity=True, outliers_threshold=0.05, remove_outliers=False, bin_numeric_features=['Carat Weight'], rare_level_threshold=0.05, combine_rare_levels=True, ignore_low_variance=False, pca_components=None, pca_method=linear, pca=False, unknown_categorical_method=least_frequent, handle_unknown_categorical=True, transformation_method=yeo-johnson, transformation=True, normalize_method=zscore, normalize=True, ignore_features=None, date_features=None, numeric_iterative_imputer=lightgbm, numeric_imputation=mean, numeric_features=None, high_cardinality_method=frequency, high_cardinality_features=None, ordinal_features=None, categorical_iterative_imputer=lightgbm, categorical_imputation=constant, categorical_features=None, iterative_imputation_iters=5, imputation_type=simple, preprocess=True, test_data=None, train_size=0.7, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree'}, ml_usecase=regression, target=Price)
2021-01-11 02:00:47,088:INFO:Checking environment
2021-01-11 02:00:47,088:INFO:python_version: 3.6.9
2021-01-11 02:00:47,088:INFO:python_build: ('default', 'Oct  8 2020 12:12:24')
2021-01-11 02:00:47,090:INFO:machine: x86_64
2021-01-11 02:00:47,091:INFO:platform: Linux-4.19.112+-x86_64-with-Ubuntu-18.04-bionic
2021-01-11 02:00:47,091:INFO:Memory: svmem(total=13653602304, available=12646076416, percent=7.4, used=840171520, free=6406336512, active=885817344, inactive=5968891904, buffers=102887424, cached=6304206848, shared=991232, slab=299552768)
2021-01-11 02:00:47,091:INFO:Physical Core: 1
2021-01-11 02:00:47,091:INFO:Logical Core: 2
2021-01-11 02:00:47,091:INFO:Checking libraries
2021-01-11 02:00:47,091:INFO:pd==1.1.5
2021-01-11 02:00:47,091:INFO:numpy==1.19.4
2021-01-11 02:00:47,091:INFO:sklearn==0.23.2
2021-01-11 02:00:47,170:INFO:xgboost==1.3.1
2021-01-11 02:00:47,170:INFO:lightgbm==3.1.1
2021-01-11 02:00:47,183:INFO:catboost==0.24.4
2021-01-11 02:00:47,551:INFO:mlflow==1.13.1
2021-01-11 02:00:47,551:INFO:Checking Exceptions
2021-01-11 02:00:47,551:INFO:Declaring global variables
2021-01-11 02:00:47,551:INFO:USI: fc30
2021-01-11 02:00:47,551:INFO:pycaret_globals: {'prep_pipe', 'target_param', 'experiment__', 'y', 'master_model_container', 'y_train', 'fix_imbalance_param', 'gpu_param', 'y_test', '_all_models_internal', 'n_jobs_param', 'stratify_param', '_gpu_n_jobs_param', 'exp_name_log', 'html_param', 'seed', '_internal_pipeline', 'fold_param', 'transform_target_method_param', 'X', 'display_container', 'fix_imbalance_method_param', 'X_train', 'log_plots_param', '_ml_usecase', '_available_plots', 'fold_shuffle_param', 'logging_param', 'USI', 'X_test', '_all_metrics', 'imputation_classifier', 'transform_target_param', 'iterative_imputation_iters_param', 'fold_generator', '_all_models', 'fold_groups_param', 'data_before_preprocess', 'imputation_regressor', 'pycaret_globals', 'create_model_container'}
2021-01-11 02:00:47,552:INFO:Preparing display monitor
2021-01-11 02:00:47,552:INFO:Preparing display monitor
2021-01-11 02:00:47,582:INFO:Importing libraries
2021-01-11 02:00:47,582:INFO:Copying data for preprocessing
2021-01-11 02:00:47,596:INFO:Declaring preprocessing parameters
2021-01-11 02:00:47,599:INFO:Creating preprocessing pipeline
2021-01-11 02:00:47,616:INFO:Preprocessing pipeline created successfully
2021-01-11 02:00:47,616:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2021-01-11 02:00:47,617:INFO:Creating global containers
2021-01-11 02:00:47,618:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2021-01-11 02:02:31,996:INFO:Creating grid variables
2021-01-11 02:02:32,028:INFO:Logging experiment in MLFlow
2021-01-11 02:02:32,353:INFO:SubProcess save_model() called ==================================
2021-01-11 02:02:32,371:INFO:Initializing save_model()
2021-01-11 02:02:32,371:INFO:save_model(verbose=False, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='Price',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='...
                ('dummy', Dummify(target='Price')),
                ('fix_perfect', Remove_100(target='Price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='Price',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), model_name=Transformation Pipeline, model=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='Price',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='...
                ('dummy', Dummify(target='Price')),
                ('fix_perfect', Remove_100(target='Price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='Price',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False))
2021-01-11 02:02:32,371:INFO:Adding model into prep_pipe
2021-01-11 02:02:32,374:WARNING:Only Model saved as it was a pipeline.
2021-01-11 02:02:32,400:INFO:Transformation Pipeline.pkl saved in current working directory
2021-01-11 02:02:32,409:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='Price',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='...
                ('dummy', Dummify(target='Price')),
                ('fix_perfect', Remove_100(target='Price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='Price',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2021-01-11 02:02:32,409:INFO:save_model() succesfully completed......................................
2021-01-11 02:02:32,574:INFO:SubProcess save_model() end ==================================
2021-01-11 02:02:32,586:INFO:create_model_container: 0
2021-01-11 02:02:32,586:INFO:master_model_container: 0
2021-01-11 02:02:32,586:INFO:display_container: 1
2021-01-11 02:02:32,593:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='Price',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='...
                ('dummy', Dummify(target='Price')),
                ('fix_perfect', Remove_100(target='Price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='Price',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2021-01-11 02:02:32,593:INFO:setup() succesfully completed......................................
2021-01-11 02:04:43,055:INFO:Initializing compare_models()
2021-01-11 02:04:43,055:INFO:compare_models(display=None, verbose=True, groups=None, fit_kwargs=None, errors=ignore, turbo=True, budget_time=None, n_select=3, sort=R2, cross_validation=True, round=4, fold=None, include=None, exclude=['ransac'])
2021-01-11 02:04:43,055:INFO:Checking exceptions
2021-01-11 02:04:43,055:INFO:Preparing display monitor
2021-01-11 02:04:43,055:INFO:Preparing display monitor
2021-01-11 02:04:43,113:INFO:Initializing Linear Regression
2021-01-11 02:04:43,113:INFO:Total runtime is 6.246566772460937e-06 minutes
2021-01-11 02:04:43,131:INFO:SubProcess create_model() called ==================================
2021-01-11 02:04:43,132:INFO:Initializing create_model()
2021-01-11 02:04:43,133:INFO:create_model(kwargs={}, display=<pycaret.internal.Display.Display object at 0x7f2e30549128>, metrics=None, system=False, verbose=False, refit=False, groups=None, fit_kwargs={}, predict=True, cross_validation=True, round=4, fold=KFold(n_splits=10, random_state=123, shuffle=False), estimator=lr)
2021-01-11 02:04:43,134:INFO:Checking exceptions
2021-01-11 02:04:43,134:INFO:Importing libraries
2021-01-11 02:04:43,134:INFO:Copying training dataset
2021-01-11 02:04:43,136:INFO:Defining folds
2021-01-11 02:04:43,136:INFO:Declaring metric variables
2021-01-11 02:04:43,155:INFO:Importing untrained model
2021-01-11 02:04:43,170:INFO:Linear Regression Imported succesfully
2021-01-11 02:04:43,199:INFO:Starting cross validation
2021-01-11 02:04:43,205:INFO:Cross validating with KFold(n_splits=10, random_state=123, shuffle=False), n_jobs=-1
2021-01-11 02:04:46,054:INFO:Calculating mean and std
2021-01-11 02:04:46,056:INFO:Creating metrics dataframe
2021-01-11 02:04:46,065:INFO:Uploading results into container
2021-01-11 02:04:46,065:INFO:Uploading model into container now
2021-01-11 02:04:46,065:INFO:create_model_container: 1
2021-01-11 02:04:46,065:INFO:master_model_container: 1
2021-01-11 02:04:46,066:INFO:display_container: 2
2021-01-11 02:04:46,066:INFO:PowerTransformedTargetRegressor(copy_X=True, fit_intercept=True, n_jobs=-1,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=LinearRegression(copy_X=True,
                                                           fit_intercept=True,
                                                           n_jobs=-1,
                                                           normalize=False))
2021-01-11 02:04:46,066:INFO:create_model() succesfully completed......................................
2021-01-11 02:04:46,237:INFO:SubProcess create_model() end ==================================
2021-01-11 02:04:46,238:INFO:Creating metrics dataframe
2021-01-11 02:04:46,255:INFO:Initializing Lasso Regression
2021-01-11 02:04:46,256:INFO:Total runtime is 0.0523800532023112 minutes
2021-01-11 02:04:46,271:INFO:SubProcess create_model() called ==================================
2021-01-11 02:04:46,271:INFO:Initializing create_model()
2021-01-11 02:04:46,272:INFO:create_model(kwargs={}, display=<pycaret.internal.Display.Display object at 0x7f2e30549128>, metrics=None, system=False, verbose=False, refit=False, groups=None, fit_kwargs={}, predict=True, cross_validation=True, round=4, fold=KFold(n_splits=10, random_state=123, shuffle=False), estimator=lasso)
2021-01-11 02:04:46,272:INFO:Checking exceptions
2021-01-11 02:04:46,272:INFO:Importing libraries
2021-01-11 02:04:46,272:INFO:Copying training dataset
2021-01-11 02:04:46,274:INFO:Defining folds
2021-01-11 02:04:46,274:INFO:Declaring metric variables
2021-01-11 02:04:46,287:INFO:Importing untrained model
2021-01-11 02:04:46,299:INFO:Lasso Regression Imported succesfully
2021-01-11 02:04:46,328:INFO:Starting cross validation
2021-01-11 02:04:46,329:INFO:Cross validating with KFold(n_splits=10, random_state=123, shuffle=False), n_jobs=-1
2021-01-11 02:04:46,606:INFO:Calculating mean and std
2021-01-11 02:04:46,607:INFO:Creating metrics dataframe
2021-01-11 02:04:46,617:INFO:Uploading results into container
2021-01-11 02:04:46,617:INFO:Uploading model into container now
2021-01-11 02:04:46,617:INFO:create_model_container: 2
2021-01-11 02:04:46,617:INFO:master_model_container: 2
2021-01-11 02:04:46,617:INFO:display_container: 2
2021-01-11 02:04:46,619:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=1000, normalize=False, positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute=False, random_state=123,
                                regressor=Lasso(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=1000, normalize=False,
                                                positive=False,
                                                precompute=False,
                                                random_state=123,
                                                selection='cyclic', tol=0.0001,
                                                warm_start=False),
                                selection='cyclic', tol=0.0001,
                                warm_start=False)
2021-01-11 02:04:46,619:INFO:create_model() succesfully completed......................................
2021-01-11 02:04:46,773:INFO:SubProcess create_model() end ==================================
2021-01-11 02:04:46,773:INFO:Creating metrics dataframe
2021-01-11 02:04:46,788:INFO:Initializing Ridge Regression
2021-01-11 02:04:46,789:INFO:Total runtime is 0.06126604477564494 minutes
2021-01-11 02:04:46,804:INFO:SubProcess create_model() called ==================================
2021-01-11 02:04:46,804:INFO:Initializing create_model()
2021-01-11 02:04:46,804:INFO:create_model(kwargs={}, display=<pycaret.internal.Display.Display object at 0x7f2e30549128>, metrics=None, system=False, verbose=False, refit=False, groups=None, fit_kwargs={}, predict=True, cross_validation=True, round=4, fold=KFold(n_splits=10, random_state=123, shuffle=False), estimator=ridge)
2021-01-11 02:04:46,804:INFO:Checking exceptions
2021-01-11 02:04:46,804:INFO:Importing libraries
2021-01-11 02:04:46,805:INFO:Copying training dataset
2021-01-11 02:04:46,807:INFO:Defining folds
2021-01-11 02:04:46,807:INFO:Declaring metric variables
2021-01-11 02:04:46,822:INFO:Importing untrained model
2021-01-11 02:04:46,835:INFO:Ridge Regression Imported succesfully
2021-01-11 02:04:46,861:INFO:Starting cross validation
2021-01-11 02:04:46,862:INFO:Cross validating with KFold(n_splits=10, random_state=123, shuffle=False), n_jobs=-1
2021-01-11 02:04:47,128:INFO:Calculating mean and std
2021-01-11 02:04:47,129:INFO:Creating metrics dataframe
2021-01-11 02:04:47,136:INFO:Uploading results into container
2021-01-11 02:04:47,136:INFO:Uploading model into container now
2021-01-11 02:04:47,136:INFO:create_model_container: 3
2021-01-11 02:04:47,136:INFO:master_model_container: 3
2021-01-11 02:04:47,136:INFO:display_container: 2
2021-01-11 02:04:47,138:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=123, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001)
2021-01-11 02:04:47,138:INFO:create_model() succesfully completed......................................
2021-01-11 02:04:47,291:INFO:SubProcess create_model() end ==================================
2021-01-11 02:04:47,291:INFO:Creating metrics dataframe
2021-01-11 02:04:47,309:INFO:Initializing Elastic Net
2021-01-11 02:04:47,309:INFO:Total runtime is 0.06993875106175741 minutes
2021-01-11 02:04:47,321:INFO:SubProcess create_model() called ==================================
2021-01-11 02:04:47,322:INFO:Initializing create_model()
2021-01-11 02:04:47,322:INFO:create_model(kwargs={}, display=<pycaret.internal.Display.Display object at 0x7f2e30549128>, metrics=None, system=False, verbose=False, refit=False, groups=None, fit_kwargs={}, predict=True, cross_validation=True, round=4, fold=KFold(n_splits=10, random_state=123, shuffle=False), estimator=en)
2021-01-11 02:04:47,322:INFO:Checking exceptions
2021-01-11 02:04:47,322:INFO:Importing libraries
2021-01-11 02:04:47,323:INFO:Copying training dataset
2021-01-11 02:04:47,324:INFO:Defining folds
2021-01-11 02:04:47,324:INFO:Declaring metric variables
2021-01-11 02:04:47,340:INFO:Importing untrained model
2021-01-11 02:04:47,355:INFO:Elastic Net Imported succesfully
2021-01-11 02:04:47,385:INFO:Starting cross validation
2021-01-11 02:04:47,386:INFO:Cross validating with KFold(n_splits=10, random_state=123, shuffle=False), n_jobs=-1
2021-01-11 02:04:47,653:INFO:Calculating mean and std
2021-01-11 02:04:47,654:INFO:Creating metrics dataframe
2021-01-11 02:04:47,659:INFO:Uploading results into container
2021-01-11 02:04:47,660:INFO:Uploading model into container now
2021-01-11 02:04:47,660:INFO:create_model_container: 4
2021-01-11 02:04:47,660:INFO:master_model_container: 4
2021-01-11 02:04:47,660:INFO:display_container: 2
2021-01-11 02:04:47,661:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                l1_ratio=0.5, max_iter=1000, normalize=False,
                                positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute=False, random_state=123,
                                regressor=ElasticNet(alpha=1.0, copy_X=True,
                                                     fit_intercept=True,
                                                     l1_ratio=0.5,
                                                     max_iter=1000,
                                                     normalize=False,
                                                     positive=False,
                                                     precompute=False,
                                                     random_state=123,
                                                     selection='cyclic',
                                                     tol=0.0001,
                                                     warm_start=False),
                                selection='cyclic', tol=0.0001,
                                warm_start=False)
2021-01-11 02:04:47,661:INFO:create_model() succesfully completed......................................
2021-01-11 02:04:47,819:INFO:SubProcess create_model() end ==================================
2021-01-11 02:04:47,819:INFO:Creating metrics dataframe
2021-01-11 02:04:47,838:INFO:Initializing Least Angle Regression
2021-01-11 02:04:47,838:INFO:Total runtime is 0.07875531117121379 minutes
2021-01-11 02:04:47,853:INFO:SubProcess create_model() called ==================================
2021-01-11 02:04:47,854:INFO:Initializing create_model()
2021-01-11 02:04:47,855:INFO:create_model(kwargs={}, display=<pycaret.internal.Display.Display object at 0x7f2e30549128>, metrics=None, system=False, verbose=False, refit=False, groups=None, fit_kwargs={}, predict=True, cross_validation=True, round=4, fold=KFold(n_splits=10, random_state=123, shuffle=False), estimator=lar)
2021-01-11 02:04:47,855:INFO:Checking exceptions
2021-01-11 02:04:47,855:INFO:Importing libraries
2021-01-11 02:04:47,855:INFO:Copying training dataset
2021-01-11 02:04:47,857:INFO:Defining folds
2021-01-11 02:04:47,857:INFO:Declaring metric variables
2021-01-11 02:04:47,871:INFO:Importing untrained model
2021-01-11 02:04:47,885:INFO:Least Angle Regression Imported succesfully
2021-01-11 02:04:47,913:INFO:Starting cross validation
2021-01-11 02:04:47,914:INFO:Cross validating with KFold(n_splits=10, random_state=123, shuffle=False), n_jobs=-1
2021-01-11 02:04:48,086:WARNING:create_model() for lar raised an exception or returned all 0.0, trying without fit_kwargs:
2021-01-11 02:04:48,089:WARNING:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/dist-packages/joblib/externals/loky/process_executor.py", line 431, in _process_worker
    r = call_item()
  File "/usr/local/lib/python3.6/dist-packages/joblib/externals/loky/process_executor.py", line 285, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "/usr/local/lib/python3.6/dist-packages/joblib/_parallel_backends.py", line 595, in __call__
    return self.func(*args, **kwargs)
  File "/usr/local/lib/python3.6/dist-packages/joblib/parallel.py", line 263, in __call__
    for func, args, kwargs in self.items]
  File "/usr/local/lib/python3.6/dist-packages/joblib/parallel.py", line 263, in <listcomp>
    for func, args, kwargs in self.items]
  File "/usr/local/lib/python3.6/dist-packages/sklearn/model_selection/_validation.py", line 560, in _fit_and_score
    test_scores = _score(estimator, X_test, y_test, scorer)
  File "/usr/local/lib/python3.6/dist-packages/sklearn/model_selection/_validation.py", line 607, in _score
    scores = scorer(estimator, X_test, y_test)
  File "/usr/local/lib/python3.6/dist-packages/sklearn/metrics/_scorer.py", line 88, in __call__
    *args, **kwargs)
  File "/usr/local/lib/python3.6/dist-packages/sklearn/metrics/_scorer.py", line 213, in _score
    **self._kwargs)
  File "/usr/local/lib/python3.6/dist-packages/sklearn/utils/validation.py", line 72, in inner_f
    return f(**kwargs)
  File "/usr/local/lib/python3.6/dist-packages/sklearn/metrics/_regression.py", line 179, in mean_absolute_error
    y_true, y_pred, multioutput)
  File "/usr/local/lib/python3.6/dist-packages/sklearn/metrics/_regression.py", line 86, in _check_reg_targets
    y_pred = check_array(y_pred, ensure_2d=False, dtype=dtype)
  File "/usr/local/lib/python3.6/dist-packages/sklearn/utils/validation.py", line 72, in inner_f
    return f(**kwargs)
  File "/usr/local/lib/python3.6/dist-packages/sklearn/utils/validation.py", line 645, in check_array
    allow_nan=force_all_finite == 'allow-nan')
  File "/usr/local/lib/python3.6/dist-packages/sklearn/utils/validation.py", line 99, in _assert_all_finite
    msg_dtype if msg_dtype is not None else X.dtype)
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.6/dist-packages/pycaret/internal/tabular.py", line 2151, in compare_models
    refit=False,
  File "/usr/local/lib/python3.6/dist-packages/pycaret/internal/tabular.py", line 3100, in create_model_supervised
    error_score=0,
  File "/usr/local/lib/python3.6/dist-packages/sklearn/utils/validation.py", line 72, in inner_f
    return f(**kwargs)
  File "/usr/local/lib/python3.6/dist-packages/sklearn/model_selection/_validation.py", line 248, in cross_validate
    for train, test in cv.split(X, y, groups))
  File "/usr/local/lib/python3.6/dist-packages/joblib/parallel.py", line 1054, in __call__
    self.retrieve()
  File "/usr/local/lib/python3.6/dist-packages/joblib/parallel.py", line 933, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "/usr/local/lib/python3.6/dist-packages/joblib/_parallel_backends.py", line 542, in wrap_future_result
    return future.result(timeout=timeout)
  File "/usr/lib/python3.6/concurrent/futures/_base.py", line 432, in result
    return self.__get_result()
  File "/usr/lib/python3.6/concurrent/futures/_base.py", line 384, in __get_result
    raise self._exception
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').

2021-01-11 02:04:48,089:INFO:Initializing create_model()
2021-01-11 02:04:48,089:INFO:create_model(kwargs={}, display=<pycaret.internal.Display.Display object at 0x7f2e30549128>, metrics=None, system=False, verbose=False, refit=False, groups=None, fit_kwargs=None, predict=True, cross_validation=True, round=4, fold=KFold(n_splits=10, random_state=123, shuffle=False), estimator=lar)
2021-01-11 02:04:48,089:INFO:Checking exceptions
2021-01-11 02:04:48,090:INFO:Importing libraries
2021-01-11 02:04:48,090:INFO:Copying training dataset
2021-01-11 02:04:48,091:INFO:Defining folds
2021-01-11 02:04:48,091:INFO:Declaring metric variables
2021-01-11 02:04:48,106:INFO:Importing untrained model
2021-01-11 02:04:48,121:INFO:Least Angle Regression Imported succesfully
2021-01-11 02:04:48,153:INFO:Starting cross validation
2021-01-11 02:04:48,155:INFO:Cross validating with KFold(n_splits=10, random_state=123, shuffle=False), n_jobs=-1
2021-01-11 02:04:50,801:ERROR:create_model() for lar raised an exception:
2021-01-11 02:04:50,801:ERROR:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/dist-packages/joblib/externals/loky/process_executor.py", line 431, in _process_worker
    r = call_item()
  File "/usr/local/lib/python3.6/dist-packages/joblib/externals/loky/process_executor.py", line 285, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "/usr/local/lib/python3.6/dist-packages/joblib/_parallel_backends.py", line 595, in __call__
    return self.func(*args, **kwargs)
  File "/usr/local/lib/python3.6/dist-packages/joblib/parallel.py", line 263, in __call__
    for func, args, kwargs in self.items]
  File "/usr/local/lib/python3.6/dist-packages/joblib/parallel.py", line 263, in <listcomp>
    for func, args, kwargs in self.items]
  File "/usr/local/lib/python3.6/dist-packages/sklearn/model_selection/_validation.py", line 560, in _fit_and_score
    test_scores = _score(estimator, X_test, y_test, scorer)
  File "/usr/local/lib/python3.6/dist-packages/sklearn/model_selection/_validation.py", line 607, in _score
    scores = scorer(estimator, X_test, y_test)
  File "/usr/local/lib/python3.6/dist-packages/sklearn/metrics/_scorer.py", line 88, in __call__
    *args, **kwargs)
  File "/usr/local/lib/python3.6/dist-packages/sklearn/metrics/_scorer.py", line 213, in _score
    **self._kwargs)
  File "/usr/local/lib/python3.6/dist-packages/sklearn/utils/validation.py", line 72, in inner_f
    return f(**kwargs)
  File "/usr/local/lib/python3.6/dist-packages/sklearn/metrics/_regression.py", line 179, in mean_absolute_error
    y_true, y_pred, multioutput)
  File "/usr/local/lib/python3.6/dist-packages/sklearn/metrics/_regression.py", line 86, in _check_reg_targets
    y_pred = check_array(y_pred, ensure_2d=False, dtype=dtype)
  File "/usr/local/lib/python3.6/dist-packages/sklearn/utils/validation.py", line 72, in inner_f
    return f(**kwargs)
  File "/usr/local/lib/python3.6/dist-packages/sklearn/utils/validation.py", line 645, in check_array
    allow_nan=force_all_finite == 'allow-nan')
  File "/usr/local/lib/python3.6/dist-packages/sklearn/utils/validation.py", line 99, in _assert_all_finite
    msg_dtype if msg_dtype is not None else X.dtype)
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.6/dist-packages/pycaret/internal/tabular.py", line 2170, in compare_models
    refit=False,
  File "/usr/local/lib/python3.6/dist-packages/pycaret/internal/tabular.py", line 3100, in create_model_supervised
    error_score=0,
  File "/usr/local/lib/python3.6/dist-packages/sklearn/utils/validation.py", line 72, in inner_f
    return f(**kwargs)
  File "/usr/local/lib/python3.6/dist-packages/sklearn/model_selection/_validation.py", line 248, in cross_validate
    for train, test in cv.split(X, y, groups))
  File "/usr/local/lib/python3.6/dist-packages/joblib/parallel.py", line 1054, in __call__
    self.retrieve()
  File "/usr/local/lib/python3.6/dist-packages/joblib/parallel.py", line 933, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "/usr/local/lib/python3.6/dist-packages/joblib/_parallel_backends.py", line 542, in wrap_future_result
    return future.result(timeout=timeout)
  File "/usr/lib/python3.6/concurrent/futures/_base.py", line 432, in result
    return self.__get_result()
  File "/usr/lib/python3.6/concurrent/futures/_base.py", line 384, in __get_result
    raise self._exception
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').

2021-01-11 02:04:50,801:INFO:Initializing Lasso Least Angle Regression
2021-01-11 02:04:50,801:INFO:Total runtime is 0.12814501126607258 minutes
2021-01-11 02:04:50,818:INFO:SubProcess create_model() called ==================================
2021-01-11 02:04:50,819:INFO:Initializing create_model()
2021-01-11 02:04:50,819:INFO:create_model(kwargs={}, display=<pycaret.internal.Display.Display object at 0x7f2e30549128>, metrics=None, system=False, verbose=False, refit=False, groups=None, fit_kwargs={}, predict=True, cross_validation=True, round=4, fold=KFold(n_splits=10, random_state=123, shuffle=False), estimator=llar)
2021-01-11 02:04:50,819:INFO:Checking exceptions
2021-01-11 02:04:50,819:INFO:Importing libraries
2021-01-11 02:04:50,820:INFO:Copying training dataset
2021-01-11 02:04:50,822:INFO:Defining folds
2021-01-11 02:04:50,822:INFO:Declaring metric variables
2021-01-11 02:04:50,836:INFO:Importing untrained model
2021-01-11 02:04:50,850:INFO:Lasso Least Angle Regression Imported succesfully
2021-01-11 02:04:50,878:INFO:Starting cross validation
2021-01-11 02:04:50,879:INFO:Cross validating with KFold(n_splits=10, random_state=123, shuffle=False), n_jobs=-1
2021-01-11 02:04:53,639:INFO:Calculating mean and std
2021-01-11 02:04:53,642:INFO:Creating metrics dataframe
2021-01-11 02:04:53,651:INFO:Uploading results into container
2021-01-11 02:04:53,651:INFO:Uploading model into container now
2021-01-11 02:04:53,651:INFO:create_model_container: 5
2021-01-11 02:04:53,652:INFO:master_model_container: 5
2021-01-11 02:04:53,652:INFO:display_container: 2
2021-01-11 02:04:53,653:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True,
                                eps=2.220446049250313e-16, fit_intercept=True,
                                fit_path=True, jitter=None, max_iter=500,
                                normalize=True, positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute='auto', random_state=123,
                                regressor=LassoLars(alpha=1.0, copy_X=True,
                                                    eps=2.220446049250313e-16,
                                                    fit_intercept=True,
                                                    fit_path=True, jitter=None,
                                                    max_iter=500,
                                                    normalize=True,
                                                    positive=False,
                                                    precompute='auto',
                                                    random_state=123,
                                                    verbose=False),
                                verbose=False)
2021-01-11 02:04:53,653:INFO:create_model() succesfully completed......................................
2021-01-11 02:04:53,822:INFO:SubProcess create_model() end ==================================
2021-01-11 02:04:53,822:INFO:Creating metrics dataframe
2021-01-11 02:04:53,843:INFO:Initializing Orthogonal Matching Pursuit
2021-01-11 02:04:53,843:INFO:Total runtime is 0.17884631554285685 minutes
2021-01-11 02:04:53,860:INFO:SubProcess create_model() called ==================================
2021-01-11 02:04:53,860:INFO:Initializing create_model()
2021-01-11 02:04:53,860:INFO:create_model(kwargs={}, display=<pycaret.internal.Display.Display object at 0x7f2e30549128>, metrics=None, system=False, verbose=False, refit=False, groups=None, fit_kwargs={}, predict=True, cross_validation=True, round=4, fold=KFold(n_splits=10, random_state=123, shuffle=False), estimator=omp)
2021-01-11 02:04:53,861:INFO:Checking exceptions
2021-01-11 02:04:53,861:INFO:Importing libraries
2021-01-11 02:04:53,861:INFO:Copying training dataset
2021-01-11 02:04:53,863:INFO:Defining folds
2021-01-11 02:04:53,863:INFO:Declaring metric variables
2021-01-11 02:04:53,878:INFO:Importing untrained model
2021-01-11 02:04:53,892:INFO:Orthogonal Matching Pursuit Imported succesfully
2021-01-11 02:04:53,921:INFO:Starting cross validation
2021-01-11 02:04:53,922:INFO:Cross validating with KFold(n_splits=10, random_state=123, shuffle=False), n_jobs=-1
2021-01-11 02:04:54,185:INFO:Calculating mean and std
2021-01-11 02:04:54,186:INFO:Creating metrics dataframe
2021-01-11 02:04:54,191:INFO:Uploading results into container
2021-01-11 02:04:54,192:INFO:Uploading model into container now
2021-01-11 02:04:54,192:INFO:create_model_container: 6
2021-01-11 02:04:54,192:INFO:master_model_container: 6
2021-01-11 02:04:54,192:INFO:display_container: 2
2021-01-11 02:04:54,194:INFO:PowerTransformedTargetRegressor(fit_intercept=True, n_nonzero_coefs=None,
                                normalize=True,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute='auto',
                                regressor=OrthogonalMatchingPursuit(fit_intercept=True,
                                                                    n_nonzero_coefs=None,
                                                                    normalize=True,
                                                                    precompute='auto',
                                                                    tol=None),
                                tol=None)
2021-01-11 02:04:54,196:INFO:create_model() succesfully completed......................................
2021-01-11 02:04:54,353:INFO:SubProcess create_model() end ==================================
2021-01-11 02:04:54,353:INFO:Creating metrics dataframe
2021-01-11 02:04:54,370:INFO:Initializing Bayesian Ridge
2021-01-11 02:04:54,371:INFO:Total runtime is 0.18763182957967123 minutes
2021-01-11 02:04:54,387:INFO:SubProcess create_model() called ==================================
2021-01-11 02:04:54,388:INFO:Initializing create_model()
2021-01-11 02:04:54,388:INFO:create_model(kwargs={}, display=<pycaret.internal.Display.Display object at 0x7f2e30549128>, metrics=None, system=False, verbose=False, refit=False, groups=None, fit_kwargs={}, predict=True, cross_validation=True, round=4, fold=KFold(n_splits=10, random_state=123, shuffle=False), estimator=br)
2021-01-11 02:04:54,388:INFO:Checking exceptions
2021-01-11 02:04:54,388:INFO:Importing libraries
2021-01-11 02:04:54,388:INFO:Copying training dataset
2021-01-11 02:04:54,390:INFO:Defining folds
2021-01-11 02:04:54,390:INFO:Declaring metric variables
2021-01-11 02:04:54,403:INFO:Importing untrained model
2021-01-11 02:04:54,416:INFO:Bayesian Ridge Imported succesfully
2021-01-11 02:04:54,443:INFO:Starting cross validation
2021-01-11 02:04:54,443:INFO:Cross validating with KFold(n_splits=10, random_state=123, shuffle=False), n_jobs=-1
2021-01-11 02:04:54,772:INFO:Calculating mean and std
2021-01-11 02:04:54,773:INFO:Creating metrics dataframe
2021-01-11 02:04:54,779:INFO:Uploading results into container
2021-01-11 02:04:54,779:INFO:Uploading model into container now
2021-01-11 02:04:54,779:INFO:create_model_container: 7
2021-01-11 02:04:54,779:INFO:master_model_container: 7
2021-01-11 02:04:54,779:INFO:display_container: 2
2021-01-11 02:04:54,780:INFO:PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False)
2021-01-11 02:04:54,780:INFO:create_model() succesfully completed......................................
2021-01-11 02:04:54,932:INFO:SubProcess create_model() end ==================================
2021-01-11 02:04:54,933:INFO:Creating metrics dataframe
2021-01-11 02:04:54,956:INFO:Initializing Passive Aggressive Regressor
2021-01-11 02:04:54,957:INFO:Total runtime is 0.1973972757657369 minutes
2021-01-11 02:04:54,974:INFO:SubProcess create_model() called ==================================
2021-01-11 02:04:54,975:INFO:Initializing create_model()
2021-01-11 02:04:54,975:INFO:create_model(kwargs={}, display=<pycaret.internal.Display.Display object at 0x7f2e30549128>, metrics=None, system=False, verbose=False, refit=False, groups=None, fit_kwargs={}, predict=True, cross_validation=True, round=4, fold=KFold(n_splits=10, random_state=123, shuffle=False), estimator=par)
2021-01-11 02:04:54,975:INFO:Checking exceptions
2021-01-11 02:04:54,975:INFO:Importing libraries
2021-01-11 02:04:54,975:INFO:Copying training dataset
2021-01-11 02:04:54,977:INFO:Defining folds
2021-01-11 02:04:54,977:INFO:Declaring metric variables
2021-01-11 02:04:54,994:INFO:Importing untrained model
2021-01-11 02:04:55,010:INFO:Passive Aggressive Regressor Imported succesfully
2021-01-11 02:04:55,045:INFO:Starting cross validation
2021-01-11 02:04:55,046:INFO:Cross validating with KFold(n_splits=10, random_state=123, shuffle=False), n_jobs=-1
2021-01-11 02:04:55,362:INFO:Calculating mean and std
2021-01-11 02:04:55,363:INFO:Creating metrics dataframe
2021-01-11 02:04:55,369:INFO:Uploading results into container
2021-01-11 02:04:55,369:INFO:Uploading model into container now
2021-01-11 02:04:55,369:INFO:create_model_container: 8
2021-01-11 02:04:55,370:INFO:master_model_container: 8
2021-01-11 02:04:55,370:INFO:display_container: 2
2021-01-11 02:04:55,373:INFO:PowerTransformedTargetRegressor(C=1.0, average=False, early_stopping=False,
                                epsilon=0.1, fit_intercept=True,
                                loss='epsilon_insensitive', max_iter=1000,
                                n_iter_no_change=5,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=PassiveAggressiveRegressor(C=1.0,
                                                                     average=False,
                                                                     early_stopping=False,
                                                                     epsilon=0.1,
                                                                     fit_intercept=True,
                                                                     loss='epsilon_insensitive',
                                                                     max_iter=1000,
                                                                     n_iter_no_change=5,
                                                                     random_state=123,
                                                                     shuffle=True,
                                                                     tol=0.001,
                                                                     validation_fraction=0.1,
                                                                     verbose=0,
                                                                     warm_start=False),
                                shuffle=True, tol=0.001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-01-11 02:04:55,373:INFO:create_model() succesfully completed......................................
2021-01-11 02:04:55,535:INFO:SubProcess create_model() end ==================================
2021-01-11 02:04:55,535:INFO:Creating metrics dataframe
2021-01-11 02:04:55,556:INFO:Initializing Huber Regressor
2021-01-11 02:04:55,556:INFO:Total runtime is 0.20738514264424643 minutes
2021-01-11 02:04:55,578:INFO:SubProcess create_model() called ==================================
2021-01-11 02:04:55,578:INFO:Initializing create_model()
2021-01-11 02:04:55,578:INFO:create_model(kwargs={}, display=<pycaret.internal.Display.Display object at 0x7f2e30549128>, metrics=None, system=False, verbose=False, refit=False, groups=None, fit_kwargs={}, predict=True, cross_validation=True, round=4, fold=KFold(n_splits=10, random_state=123, shuffle=False), estimator=huber)
2021-01-11 02:04:55,578:INFO:Checking exceptions
2021-01-11 02:04:55,578:INFO:Importing libraries
2021-01-11 02:04:55,579:INFO:Copying training dataset
2021-01-11 02:04:55,580:INFO:Defining folds
2021-01-11 02:04:55,580:INFO:Declaring metric variables
2021-01-11 02:04:55,598:INFO:Importing untrained model
2021-01-11 02:04:55,617:INFO:Huber Regressor Imported succesfully
2021-01-11 02:04:55,652:INFO:Starting cross validation
2021-01-11 02:04:55,653:INFO:Cross validating with KFold(n_splits=10, random_state=123, shuffle=False), n_jobs=-1
2021-01-11 02:04:57,299:INFO:Calculating mean and std
2021-01-11 02:04:57,300:INFO:Creating metrics dataframe
2021-01-11 02:04:57,306:INFO:Uploading results into container
2021-01-11 02:04:57,306:INFO:Uploading model into container now
2021-01-11 02:04:57,307:INFO:create_model_container: 9
2021-01-11 02:04:57,307:INFO:master_model_container: 9
2021-01-11 02:04:57,307:INFO:display_container: 2
2021-01-11 02:04:57,309:INFO:PowerTransformedTargetRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True,
                                max_iter=100,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=HuberRegressor(alpha=0.0001,
                                                         epsilon=1.35,
                                                         fit_intercept=True,
                                                         max_iter=100,
                                                         tol=1e-05,
                                                         warm_start=False),
                                tol=1e-05, warm_start=False)
2021-01-11 02:04:57,309:INFO:create_model() succesfully completed......................................
2021-01-11 02:04:57,461:INFO:SubProcess create_model() end ==================================
2021-01-11 02:04:57,462:INFO:Creating metrics dataframe
2021-01-11 02:04:57,480:INFO:Initializing K Neighbors Regressor
2021-01-11 02:04:57,480:INFO:Total runtime is 0.2394517183303833 minutes
2021-01-11 02:04:57,495:INFO:SubProcess create_model() called ==================================
2021-01-11 02:04:57,495:INFO:Initializing create_model()
2021-01-11 02:04:57,495:INFO:create_model(kwargs={}, display=<pycaret.internal.Display.Display object at 0x7f2e30549128>, metrics=None, system=False, verbose=False, refit=False, groups=None, fit_kwargs={}, predict=True, cross_validation=True, round=4, fold=KFold(n_splits=10, random_state=123, shuffle=False), estimator=knn)
2021-01-11 02:04:57,495:INFO:Checking exceptions
2021-01-11 02:04:57,495:INFO:Importing libraries
2021-01-11 02:04:57,495:INFO:Copying training dataset
2021-01-11 02:04:57,497:INFO:Defining folds
2021-01-11 02:04:57,497:INFO:Declaring metric variables
2021-01-11 02:04:57,510:INFO:Importing untrained model
2021-01-11 02:04:57,522:INFO:K Neighbors Regressor Imported succesfully
2021-01-11 02:04:57,552:INFO:Starting cross validation
2021-01-11 02:04:57,553:INFO:Cross validating with KFold(n_splits=10, random_state=123, shuffle=False), n_jobs=-1
2021-01-11 02:04:58,988:INFO:Calculating mean and std
2021-01-11 02:04:58,989:INFO:Creating metrics dataframe
2021-01-11 02:04:58,995:INFO:Uploading results into container
2021-01-11 02:04:58,995:INFO:Uploading model into container now
2021-01-11 02:04:58,995:INFO:create_model_container: 10
2021-01-11 02:04:58,995:INFO:master_model_container: 10
2021-01-11 02:04:58,995:INFO:display_container: 2
2021-01-11 02:04:58,996:INFO:PowerTransformedTargetRegressor(algorithm='auto', leaf_size=30,
                                metric='minkowski', metric_params=None,
                                n_jobs=-1, n_neighbors=5, p=2,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=KNeighborsRegressor(algorithm='auto',
                                                              leaf_size=30,
                                                              metric='minkowski',
                                                              metric_params=None,
                                                              n_jobs=-1,
                                                              n_neighbors=5,
                                                              p=2,
                                                              weights='uniform'),
                                weights='uniform')
2021-01-11 02:04:58,997:INFO:create_model() succesfully completed......................................
2021-01-11 02:04:59,155:INFO:SubProcess create_model() end ==================================
2021-01-11 02:04:59,155:INFO:Creating metrics dataframe
2021-01-11 02:04:59,179:INFO:Initializing Decision Tree Regressor
2021-01-11 02:04:59,179:INFO:Total runtime is 0.26777462164560956 minutes
2021-01-11 02:04:59,195:INFO:SubProcess create_model() called ==================================
2021-01-11 02:04:59,195:INFO:Initializing create_model()
2021-01-11 02:04:59,195:INFO:create_model(kwargs={}, display=<pycaret.internal.Display.Display object at 0x7f2e30549128>, metrics=None, system=False, verbose=False, refit=False, groups=None, fit_kwargs={}, predict=True, cross_validation=True, round=4, fold=KFold(n_splits=10, random_state=123, shuffle=False), estimator=dt)
2021-01-11 02:04:59,195:INFO:Checking exceptions
2021-01-11 02:04:59,196:INFO:Importing libraries
2021-01-11 02:04:59,196:INFO:Copying training dataset
2021-01-11 02:04:59,197:INFO:Defining folds
2021-01-11 02:04:59,198:INFO:Declaring metric variables
2021-01-11 02:04:59,214:INFO:Importing untrained model
2021-01-11 02:04:59,229:INFO:Decision Tree Regressor Imported succesfully
2021-01-11 02:04:59,256:INFO:Starting cross validation
2021-01-11 02:04:59,257:INFO:Cross validating with KFold(n_splits=10, random_state=123, shuffle=False), n_jobs=-1
2021-01-11 02:04:59,657:INFO:Calculating mean and std
2021-01-11 02:04:59,659:INFO:Creating metrics dataframe
2021-01-11 02:04:59,669:INFO:Uploading results into container
2021-01-11 02:04:59,669:INFO:Uploading model into container now
2021-01-11 02:04:59,669:INFO:create_model_container: 11
2021-01-11 02:04:59,669:INFO:master_model_container: 11
2021-01-11 02:04:59,669:INFO:display_container: 2
2021-01-11 02:04:59,671:INFO:PowerTransformedTargetRegressor(ccp_alpha=0.0, criterion='mse', max_depth=None,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                presort='deprecated', random_state=123,
                                regressor=DecisionTreeRegressor(ccp_alpha=0.0,
                                                                criterion='mse',
                                                                max_depth=None,
                                                                max_features=None,
                                                                max_leaf_nodes=None,
                                                                min_impurity_decrease=0.0,
                                                                min_impurity_split=None,
                                                                min_samples_leaf=1,
                                                                min_samples_split=2,
                                                                min_weight_fraction_leaf=0.0,
                                                                presort='deprecated',
                                                                random_state=123,
                                                                splitter='best'),
                                splitter='best')
2021-01-11 02:04:59,671:INFO:create_model() succesfully completed......................................
2021-01-11 02:04:59,833:INFO:SubProcess create_model() end ==================================
2021-01-11 02:04:59,833:INFO:Creating metrics dataframe
2021-01-11 02:04:59,851:INFO:Initializing Random Forest Regressor
2021-01-11 02:04:59,851:INFO:Total runtime is 0.27897709608078003 minutes
2021-01-11 02:04:59,865:INFO:SubProcess create_model() called ==================================
2021-01-11 02:04:59,866:INFO:Initializing create_model()
2021-01-11 02:04:59,866:INFO:create_model(kwargs={}, display=<pycaret.internal.Display.Display object at 0x7f2e30549128>, metrics=None, system=False, verbose=False, refit=False, groups=None, fit_kwargs={}, predict=True, cross_validation=True, round=4, fold=KFold(n_splits=10, random_state=123, shuffle=False), estimator=rf)
2021-01-11 02:04:59,866:INFO:Checking exceptions
2021-01-11 02:04:59,866:INFO:Importing libraries
2021-01-11 02:04:59,866:INFO:Copying training dataset
2021-01-11 02:04:59,868:INFO:Defining folds
2021-01-11 02:04:59,868:INFO:Declaring metric variables
2021-01-11 02:04:59,882:INFO:Importing untrained model
2021-01-11 02:04:59,896:INFO:Random Forest Regressor Imported succesfully
2021-01-11 02:04:59,924:INFO:Starting cross validation
2021-01-11 02:04:59,925:INFO:Cross validating with KFold(n_splits=10, random_state=123, shuffle=False), n_jobs=-1
2021-01-11 02:05:12,587:INFO:Calculating mean and std
2021-01-11 02:05:12,589:INFO:Creating metrics dataframe
2021-01-11 02:05:12,594:INFO:Uploading results into container
2021-01-11 02:05:12,595:INFO:Uploading model into container now
2021-01-11 02:05:12,595:INFO:create_model_container: 12
2021-01-11 02:05:12,595:INFO:master_model_container: 12
2021-01-11 02:05:12,595:INFO:display_container: 2
2021-01-11 02:05:12,601:INFO:PowerTransformedTargetRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',
                                max_depth=None, max_features='auto',
                                max_leaf_nodes=None, max_samples=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_jobs=-1, oob_score=False,
                                power_transformer_method='box-cox',
                                power...
                                regressor=RandomForestRegressor(bootstrap=True,
                                                                ccp_alpha=0.0,
                                                                criterion='mse',
                                                                max_depth=None,
                                                                max_features='auto',
                                                                max_leaf_nodes=None,
                                                                max_samples=None,
                                                                min_impurity_decrease=0.0,
                                                                min_impurity_split=None,
                                                                min_samples_leaf=1,
                                                                min_samples_split=2,
                                                                min_weight_fraction_leaf=0.0,
                                                                n_estimators=100,
                                                                n_jobs=-1,
                                                                oob_score=False,
                                                                random_state=123,
                                                                verbose=0,
                                                                warm_start=False),
                                verbose=0, warm_start=False)
2021-01-11 02:05:12,601:INFO:create_model() succesfully completed......................................
2021-01-11 02:05:12,754:INFO:SubProcess create_model() end ==================================
2021-01-11 02:05:12,754:INFO:Creating metrics dataframe
2021-01-11 02:05:12,779:INFO:Initializing Extra Trees Regressor
2021-01-11 02:05:12,779:INFO:Total runtime is 0.49444172382354734 minutes
2021-01-11 02:05:12,800:INFO:SubProcess create_model() called ==================================
2021-01-11 02:05:12,801:INFO:Initializing create_model()
2021-01-11 02:05:12,801:INFO:create_model(kwargs={}, display=<pycaret.internal.Display.Display object at 0x7f2e30549128>, metrics=None, system=False, verbose=False, refit=False, groups=None, fit_kwargs={}, predict=True, cross_validation=True, round=4, fold=KFold(n_splits=10, random_state=123, shuffle=False), estimator=et)
2021-01-11 02:05:12,801:INFO:Checking exceptions
2021-01-11 02:05:12,801:INFO:Importing libraries
2021-01-11 02:05:12,801:INFO:Copying training dataset
2021-01-11 02:05:12,803:INFO:Defining folds
2021-01-11 02:05:12,804:INFO:Declaring metric variables
2021-01-11 02:05:12,819:INFO:Importing untrained model
2021-01-11 02:05:12,835:INFO:Extra Trees Regressor Imported succesfully
2021-01-11 02:05:12,868:INFO:Starting cross validation
2021-01-11 02:05:12,869:INFO:Cross validating with KFold(n_splits=10, random_state=123, shuffle=False), n_jobs=-1
2021-01-11 02:05:26,926:INFO:Calculating mean and std
2021-01-11 02:05:26,927:INFO:Creating metrics dataframe
2021-01-11 02:05:26,933:INFO:Uploading results into container
2021-01-11 02:05:26,934:INFO:Uploading model into container now
2021-01-11 02:05:26,934:INFO:create_model_container: 13
2021-01-11 02:05:26,934:INFO:master_model_container: 13
2021-01-11 02:05:26,934:INFO:display_container: 2
2021-01-11 02:05:26,936:INFO:PowerTransformedTargetRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                                max_depth=None, max_features='auto',
                                max_leaf_nodes=None, max_samples=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_jobs=-1, oob_score=False,
                                power_transformer_method='box-cox',
                                powe...
                                regressor=ExtraTreesRegressor(bootstrap=False,
                                                              ccp_alpha=0.0,
                                                              criterion='mse',
                                                              max_depth=None,
                                                              max_features='auto',
                                                              max_leaf_nodes=None,
                                                              max_samples=None,
                                                              min_impurity_decrease=0.0,
                                                              min_impurity_split=None,
                                                              min_samples_leaf=1,
                                                              min_samples_split=2,
                                                              min_weight_fraction_leaf=0.0,
                                                              n_estimators=100,
                                                              n_jobs=-1,
                                                              oob_score=False,
                                                              random_state=123,
                                                              verbose=0,
                                                              warm_start=False),
                                verbose=0, warm_start=False)
2021-01-11 02:05:26,936:INFO:create_model() succesfully completed......................................
2021-01-11 02:05:27,086:INFO:SubProcess create_model() end ==================================
2021-01-11 02:05:27,086:INFO:Creating metrics dataframe
2021-01-11 02:05:27,113:INFO:Initializing AdaBoost Regressor
2021-01-11 02:05:27,113:INFO:Total runtime is 0.7333432833353678 minutes
2021-01-11 02:05:27,130:INFO:SubProcess create_model() called ==================================
2021-01-11 02:05:27,130:INFO:Initializing create_model()
2021-01-11 02:05:27,130:INFO:create_model(kwargs={}, display=<pycaret.internal.Display.Display object at 0x7f2e30549128>, metrics=None, system=False, verbose=False, refit=False, groups=None, fit_kwargs={}, predict=True, cross_validation=True, round=4, fold=KFold(n_splits=10, random_state=123, shuffle=False), estimator=ada)
2021-01-11 02:05:27,130:INFO:Checking exceptions
2021-01-11 02:05:27,131:INFO:Importing libraries
2021-01-11 02:05:27,131:INFO:Copying training dataset
2021-01-11 02:05:27,133:INFO:Defining folds
2021-01-11 02:05:27,133:INFO:Declaring metric variables
2021-01-11 02:05:27,146:INFO:Importing untrained model
2021-01-11 02:05:27,159:INFO:AdaBoost Regressor Imported succesfully
2021-01-11 02:05:27,192:INFO:Starting cross validation
2021-01-11 02:05:27,193:INFO:Cross validating with KFold(n_splits=10, random_state=123, shuffle=False), n_jobs=-1
2021-01-11 02:05:29,977:INFO:Calculating mean and std
2021-01-11 02:05:29,978:INFO:Creating metrics dataframe
2021-01-11 02:05:29,984:INFO:Uploading results into container
2021-01-11 02:05:29,984:INFO:Uploading model into container now
2021-01-11 02:05:29,984:INFO:create_model_container: 14
2021-01-11 02:05:29,985:INFO:master_model_container: 14
2021-01-11 02:05:29,985:INFO:display_container: 2
2021-01-11 02:05:29,985:INFO:PowerTransformedTargetRegressor(base_estimator=None, learning_rate=1.0,
                                loss='linear', n_estimators=50,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=AdaBoostRegressor(base_estimator=None,
                                                            learning_rate=1.0,
                                                            loss='linear',
                                                            n_estimators=50,
                                                            random_state=123))
2021-01-11 02:05:29,985:INFO:create_model() succesfully completed......................................
2021-01-11 02:05:30,137:INFO:SubProcess create_model() end ==================================
2021-01-11 02:05:30,137:INFO:Creating metrics dataframe
2021-01-11 02:05:30,163:INFO:Initializing Gradient Boosting Regressor
2021-01-11 02:05:30,163:INFO:Total runtime is 0.7841694315274557 minutes
2021-01-11 02:05:30,179:INFO:SubProcess create_model() called ==================================
2021-01-11 02:05:30,179:INFO:Initializing create_model()
2021-01-11 02:05:30,179:INFO:create_model(kwargs={}, display=<pycaret.internal.Display.Display object at 0x7f2e30549128>, metrics=None, system=False, verbose=False, refit=False, groups=None, fit_kwargs={}, predict=True, cross_validation=True, round=4, fold=KFold(n_splits=10, random_state=123, shuffle=False), estimator=gbr)
2021-01-11 02:05:30,179:INFO:Checking exceptions
2021-01-11 02:05:30,179:INFO:Importing libraries
2021-01-11 02:05:30,179:INFO:Copying training dataset
2021-01-11 02:05:30,181:INFO:Defining folds
2021-01-11 02:05:30,181:INFO:Declaring metric variables
2021-01-11 02:05:30,195:INFO:Importing untrained model
2021-01-11 02:05:30,208:INFO:Gradient Boosting Regressor Imported succesfully
2021-01-11 02:05:30,234:INFO:Starting cross validation
2021-01-11 02:05:30,235:INFO:Cross validating with KFold(n_splits=10, random_state=123, shuffle=False), n_jobs=-1
2021-01-11 02:05:33,281:INFO:Calculating mean and std
2021-01-11 02:05:33,282:INFO:Creating metrics dataframe
2021-01-11 02:05:33,292:INFO:Uploading results into container
2021-01-11 02:05:33,292:INFO:Uploading model into container now
2021-01-11 02:05:33,292:INFO:create_model_container: 15
2021-01-11 02:05:33,292:INFO:master_model_container: 15
2021-01-11 02:05:33,292:INFO:display_container: 2
2021-01-11 02:05:33,295:INFO:PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=123,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-01-11 02:05:33,295:INFO:create_model() succesfully completed......................................
2021-01-11 02:05:33,449:INFO:SubProcess create_model() end ==================================
2021-01-11 02:05:33,449:INFO:Creating metrics dataframe
2021-01-11 02:05:33,469:INFO:Initializing Extreme Gradient Boosting
2021-01-11 02:05:33,469:INFO:Total runtime is 0.8392685095469157 minutes
2021-01-11 02:05:33,485:INFO:SubProcess create_model() called ==================================
2021-01-11 02:05:33,485:INFO:Initializing create_model()
2021-01-11 02:05:33,485:INFO:create_model(kwargs={}, display=<pycaret.internal.Display.Display object at 0x7f2e30549128>, metrics=None, system=False, verbose=False, refit=False, groups=None, fit_kwargs={}, predict=True, cross_validation=True, round=4, fold=KFold(n_splits=10, random_state=123, shuffle=False), estimator=xgboost)
2021-01-11 02:05:33,485:INFO:Checking exceptions
2021-01-11 02:05:33,485:INFO:Importing libraries
2021-01-11 02:05:33,485:INFO:Copying training dataset
2021-01-11 02:05:33,487:INFO:Defining folds
2021-01-11 02:05:33,487:INFO:Declaring metric variables
2021-01-11 02:05:33,499:INFO:Importing untrained model
2021-01-11 02:05:33,513:INFO:Extreme Gradient Boosting Imported succesfully
2021-01-11 02:05:33,543:INFO:Starting cross validation
2021-01-11 02:05:33,544:INFO:Cross validating with KFold(n_splits=10, random_state=123, shuffle=False), n_jobs=-1
2021-01-11 02:05:47,287:INFO:Calculating mean and std
2021-01-11 02:05:47,289:INFO:Creating metrics dataframe
2021-01-11 02:05:47,300:INFO:Uploading results into container
2021-01-11 02:05:47,300:INFO:Uploading model into container now
2021-01-11 02:05:47,300:INFO:create_model_container: 16
2021-01-11 02:05:47,300:INFO:master_model_container: 16
2021-01-11 02:05:47,300:INFO:display_container: 2
2021-01-11 02:05:47,304:INFO:PowerTransformedTargetRegressor(base_score=None, booster='gbtree',
                                colsample_bylevel=None, colsample_bynode=None,
                                colsample_bytree=None, gamma=None, gpu_id=None,
                                importance_type='gain',
                                interaction_constraints=None,
                                learning_rate=None, max_delta_step=None,
                                max_depth=None, min_child_weight=None,
                                missing=nan, monotone_constraints=None,
                                n_estimators=100, n_jobs=-1,
                                nu...
                                                       missing=nan,
                                                       monotone_constraints=None,
                                                       n_estimators=100,
                                                       n_jobs=-1,
                                                       num_parallel_tree=None,
                                                       objective='reg:squarederror',
                                                       random_state=123,
                                                       reg_alpha=None,
                                                       reg_lambda=None,
                                                       scale_pos_weight=None,
                                                       subsample=None,
                                                       tree_method='auto',
                                                       validate_parameters=None,
                                                       verbosity=0),
                                scale_pos_weight=None, subsample=None,
                                tree_method='auto', validate_parameters=None,
                                verbosity=0)
2021-01-11 02:05:47,304:INFO:create_model() succesfully completed......................................
2021-01-11 02:05:47,454:INFO:SubProcess create_model() end ==================================
2021-01-11 02:05:47,454:INFO:Creating metrics dataframe
2021-01-11 02:05:47,474:INFO:Initializing Light Gradient Boosting Machine
2021-01-11 02:05:47,474:INFO:Total runtime is 1.0726868112881978 minutes
2021-01-11 02:05:47,489:INFO:SubProcess create_model() called ==================================
2021-01-11 02:05:47,490:INFO:Initializing create_model()
2021-01-11 02:05:47,490:INFO:create_model(kwargs={}, display=<pycaret.internal.Display.Display object at 0x7f2e30549128>, metrics=None, system=False, verbose=False, refit=False, groups=None, fit_kwargs={}, predict=True, cross_validation=True, round=4, fold=KFold(n_splits=10, random_state=123, shuffle=False), estimator=lightgbm)
2021-01-11 02:05:47,490:INFO:Checking exceptions
2021-01-11 02:05:47,490:INFO:Importing libraries
2021-01-11 02:05:47,490:INFO:Copying training dataset
2021-01-11 02:05:47,492:INFO:Defining folds
2021-01-11 02:05:47,492:INFO:Declaring metric variables
2021-01-11 02:05:47,506:INFO:Importing untrained model
2021-01-11 02:05:47,521:INFO:Light Gradient Boosting Machine Imported succesfully
2021-01-11 02:05:47,552:INFO:Starting cross validation
2021-01-11 02:05:47,553:INFO:Cross validating with KFold(n_splits=10, random_state=123, shuffle=False), n_jobs=-1
2021-01-11 02:05:48,490:INFO:Calculating mean and std
2021-01-11 02:05:48,491:INFO:Creating metrics dataframe
2021-01-11 02:05:48,496:INFO:Uploading results into container
2021-01-11 02:05:48,497:INFO:Uploading model into container now
2021-01-11 02:05:48,497:INFO:create_model_container: 17
2021-01-11 02:05:48,497:INFO:master_model_container: 17
2021-01-11 02:05:48,497:INFO:display_container: 2
2021-01-11 02:05:48,499:INFO:PowerTransformedTargetRegressor(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=1...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=20,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.0,
                                                        n_estimators=100,
                                                        n_jobs=-1,
                                                        num_leaves=31,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0,
                                                        reg_lambda=0.0,
                                                        silent=True,
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent=True, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0)
2021-01-11 02:05:48,499:INFO:create_model() succesfully completed......................................
2021-01-11 02:05:48,653:INFO:SubProcess create_model() end ==================================
2021-01-11 02:05:48,654:INFO:Creating metrics dataframe
2021-01-11 02:05:48,678:INFO:Initializing CatBoost Regressor
2021-01-11 02:05:48,678:INFO:Total runtime is 1.0927568912506103 minutes
2021-01-11 02:05:48,693:INFO:SubProcess create_model() called ==================================
2021-01-11 02:05:48,694:INFO:Initializing create_model()
2021-01-11 02:05:48,694:INFO:create_model(kwargs={}, display=<pycaret.internal.Display.Display object at 0x7f2e30549128>, metrics=None, system=False, verbose=False, refit=False, groups=None, fit_kwargs={}, predict=True, cross_validation=True, round=4, fold=KFold(n_splits=10, random_state=123, shuffle=False), estimator=catboost)
2021-01-11 02:05:48,694:INFO:Checking exceptions
2021-01-11 02:05:48,694:INFO:Importing libraries
2021-01-11 02:05:48,694:INFO:Copying training dataset
2021-01-11 02:05:48,696:INFO:Defining folds
2021-01-11 02:05:48,696:INFO:Declaring metric variables
2021-01-11 02:05:48,708:INFO:Importing untrained model
2021-01-11 02:05:48,720:INFO:CatBoost Regressor Imported succesfully
2021-01-11 02:05:48,743:INFO:Starting cross validation
2021-01-11 02:05:48,744:INFO:Cross validating with KFold(n_splits=10, random_state=123, shuffle=False), n_jobs=-1
2021-01-11 02:06:00,182:INFO:Calculating mean and std
2021-01-11 02:06:00,182:INFO:Creating metrics dataframe
2021-01-11 02:06:00,187:INFO:Uploading results into container
2021-01-11 02:06:00,187:INFO:Uploading model into container now
2021-01-11 02:06:00,187:INFO:create_model_container: 18
2021-01-11 02:06:00,187:INFO:master_model_container: 18
2021-01-11 02:06:00,187:INFO:display_container: 2
2021-01-11 02:06:00,187:INFO:PowerTransformedTargetRegressor(border_count=254, loss_function='RMSE',
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=<catboost.core.CatBoostRegressor object at 0x7f2e08fd6630>,
                                task_type='CPU', verbose=False)
2021-01-11 02:06:00,187:INFO:create_model() succesfully completed......................................
2021-01-11 02:06:00,336:INFO:SubProcess create_model() end ==================================
2021-01-11 02:06:00,337:INFO:Creating metrics dataframe
2021-01-11 02:06:00,387:INFO:Initializing create_model()
2021-01-11 02:06:00,387:INFO:create_model(kwargs={}, display=None, metrics=None, system=False, verbose=False, refit=True, groups=None, fit_kwargs={}, predict=False, cross_validation=False, round=4, fold=KFold(n_splits=10, random_state=123, shuffle=False), estimator=PowerTransformedTargetRegressor(border_count=254, loss_function='RMSE',
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=<catboost.core.CatBoostRegressor object at 0x7f2e08fd6630>,
                                task_type='CPU', verbose=False))
2021-01-11 02:06:00,388:INFO:Checking exceptions
2021-01-11 02:06:00,388:INFO:Importing libraries
2021-01-11 02:06:00,388:INFO:Copying training dataset
2021-01-11 02:06:00,389:INFO:Defining folds
2021-01-11 02:06:00,389:INFO:Declaring metric variables
2021-01-11 02:06:00,389:INFO:Importing untrained model
2021-01-11 02:06:00,389:INFO:Declaring custom model
2021-01-11 02:06:00,390:INFO:CatBoost Regressor Imported succesfully
2021-01-11 02:06:00,391:INFO:Cross validation set to False
2021-01-11 02:06:00,391:INFO:Fitting Model
2021-01-11 02:06:01,648:INFO:PowerTransformedTargetRegressor(border_count=254, loss_function='RMSE',
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=<catboost.core.CatBoostRegressor object at 0x7f2e0912c320>,
                                task_type='CPU', verbose=False)
2021-01-11 02:06:01,648:INFO:create_models() succesfully completed......................................
2021-01-11 02:06:01,800:INFO:Creating MLFlow logs
2021-01-11 02:06:01,814:INFO:Model: CatBoost Regressor
2021-01-11 02:06:01,833:INFO:logged params: {'nan_mode': 'Min', 'eval_metric': 'RMSE', 'iterations': 1000, 'sampling_frequency': 'PerTree', 'leaf_estimation_method': 'Newton', 'grow_policy': 'SymmetricTree', 'penalties_coefficient': 1, 'boosting_type': 'Plain', 'model_shrink_mode': 'Constant', 'feature_border_type': 'GreedyLogSum', 'bayesian_matrix_reg': 0.10000000149011612, 'l2_leaf_reg': 3, 'random_strength': 1, 'rsm': 1, 'boost_from_average': True, 'model_size_reg': 0.5, 'subsample': 0.800000011920929, 'use_best_model': False, 'random_seed': 123, 'depth': 6, 'posterior_sampling': False, 'border_count': 254, 'classes_count': 0, 'auto_class_weights': 'None', 'sparse_features_conflict_fraction': 0, 'leaf_estimation_backtracking': 'AnyImprovement', 'best_model_min_trees': 1, 'model_shrink_rate': 0, 'min_data_in_leaf': 1, 'loss_function': 'RMSE', 'learning_rate': 0.05038699880242348, 'score_function': 'Cosine', 'task_type': 'CPU', 'leaf_estimation_iterations': 1, 'bootstrap_type': 'MVS', 'max_leaves': 64}
2021-01-11 02:06:01,866:INFO:Initializing predict_model()
2021-01-11 02:06:01,866:INFO:predict_model(display=None, ml_usecase=None, verbose=False, round=4, encoded_labels=False, probability_threshold=None, estimator=PowerTransformedTargetRegressor(border_count=254, loss_function='RMSE',
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=<catboost.core.CatBoostRegressor object at 0x7f2e0912c320>,
                                task_type='CPU', verbose=False))
2021-01-11 02:06:01,866:INFO:Checking exceptions
2021-01-11 02:06:01,866:INFO:Preloading libraries
2021-01-11 02:06:02,323:INFO:Initializing create_model()
2021-01-11 02:06:02,323:INFO:create_model(kwargs={}, display=None, metrics=None, system=False, verbose=False, refit=True, groups=None, fit_kwargs={}, predict=False, cross_validation=False, round=4, fold=KFold(n_splits=10, random_state=123, shuffle=False), estimator=PowerTransformedTargetRegressor(base_score=None, booster='gbtree',
                                colsample_bylevel=None, colsample_bynode=None,
                                colsample_bytree=None, gamma=None, gpu_id=None,
                                importance_type='gain',
                                interaction_constraints=None,
                                learning_rate=None, max_delta_step=None,
                                max_depth=None, min_child_weight=None,
                                missing=nan, monotone_constraints=None,
                                n_estimators=100, n_jobs=-1,
                                nu...
                                                       missing=nan,
                                                       monotone_constraints=None,
                                                       n_estimators=100,
                                                       n_jobs=-1,
                                                       num_parallel_tree=None,
                                                       objective='reg:squarederror',
                                                       random_state=123,
                                                       reg_alpha=None,
                                                       reg_lambda=None,
                                                       scale_pos_weight=None,
                                                       subsample=None,
                                                       tree_method='auto',
                                                       validate_parameters=None,
                                                       verbosity=0),
                                scale_pos_weight=None, subsample=None,
                                tree_method='auto', validate_parameters=None,
                                verbosity=0))
2021-01-11 02:06:02,323:INFO:Checking exceptions
2021-01-11 02:06:02,324:INFO:Importing libraries
2021-01-11 02:06:02,324:INFO:Copying training dataset
2021-01-11 02:06:02,324:INFO:Defining folds
2021-01-11 02:06:02,324:INFO:Declaring metric variables
2021-01-11 02:06:02,324:INFO:Importing untrained model
2021-01-11 02:06:02,325:INFO:Declaring custom model
2021-01-11 02:06:02,327:INFO:Extreme Gradient Boosting Imported succesfully
2021-01-11 02:06:02,327:INFO:Cross validation set to False
2021-01-11 02:06:02,327:INFO:Fitting Model
2021-01-11 02:06:03,133:INFO:PowerTransformedTargetRegressor(base_score=None, booster='gbtree',
                                colsample_bylevel=None, colsample_bynode=None,
                                colsample_bytree=None, gamma=None, gpu_id=None,
                                importance_type='gain',
                                interaction_constraints=None,
                                learning_rate=None, max_delta_step=None,
                                max_depth=None, min_child_weight=None,
                                missing=nan, monotone_constraints=None,
                                n_estimators=100, n_jobs=-1,
                                nu...
                                                       missing=nan,
                                                       monotone_constraints=None,
                                                       n_estimators=100,
                                                       n_jobs=-1,
                                                       num_parallel_tree=None,
                                                       objective='reg:squarederror',
                                                       random_state=123,
                                                       reg_alpha=None,
                                                       reg_lambda=None,
                                                       scale_pos_weight=None,
                                                       subsample=None,
                                                       tree_method='auto',
                                                       validate_parameters=None,
                                                       verbosity=0),
                                scale_pos_weight=None, subsample=None,
                                tree_method='auto', validate_parameters=None,
                                verbosity=0)
2021-01-11 02:06:03,133:INFO:create_models() succesfully completed......................................
2021-01-11 02:06:03,280:INFO:Creating MLFlow logs
2021-01-11 02:06:03,295:INFO:Model: Extreme Gradient Boosting
2021-01-11 02:06:03,313:INFO:logged params: {'objective': 'reg:squarederror', 'base_score': 0.5, 'booster': 'gbtree', 'colsample_bylevel': 1, 'colsample_bynode': 1, 'colsample_bytree': 1, 'gamma': 0, 'gpu_id': -1, 'importance_type': 'gain', 'interaction_constraints': '', 'learning_rate': 0.300000012, 'max_delta_step': 0, 'max_depth': 6, 'min_child_weight': 1, 'missing': nan, 'monotone_constraints': '()', 'n_estimators': 100, 'n_jobs': -1, 'num_parallel_tree': 1, 'random_state': 123, 'reg_alpha': 0, 'reg_lambda': 1, 'scale_pos_weight': 1, 'subsample': 1, 'tree_method': 'auto', 'validate_parameters': 1, 'verbosity': 0}
2021-01-11 02:06:03,346:INFO:Initializing predict_model()
2021-01-11 02:06:03,346:INFO:predict_model(display=None, ml_usecase=None, verbose=False, round=4, encoded_labels=False, probability_threshold=None, estimator=PowerTransformedTargetRegressor(base_score=None, booster='gbtree',
                                colsample_bylevel=None, colsample_bynode=None,
                                colsample_bytree=None, gamma=None, gpu_id=None,
                                importance_type='gain',
                                interaction_constraints=None,
                                learning_rate=None, max_delta_step=None,
                                max_depth=None, min_child_weight=None,
                                missing=nan, monotone_constraints=None,
                                n_estimators=100, n_jobs=-1,
                                nu...
                                                       missing=nan,
                                                       monotone_constraints=None,
                                                       n_estimators=100,
                                                       n_jobs=-1,
                                                       num_parallel_tree=None,
                                                       objective='reg:squarederror',
                                                       random_state=123,
                                                       reg_alpha=None,
                                                       reg_lambda=None,
                                                       scale_pos_weight=None,
                                                       subsample=None,
                                                       tree_method='auto',
                                                       validate_parameters=None,
                                                       verbosity=0),
                                scale_pos_weight=None, subsample=None,
                                tree_method='auto', validate_parameters=None,
                                verbosity=0))
2021-01-11 02:06:03,347:INFO:Checking exceptions
2021-01-11 02:06:03,347:INFO:Preloading libraries
2021-01-11 02:06:03,813:INFO:Initializing create_model()
2021-01-11 02:06:03,813:INFO:create_model(kwargs={}, display=None, metrics=None, system=False, verbose=False, refit=True, groups=None, fit_kwargs={}, predict=False, cross_validation=False, round=4, fold=KFold(n_splits=10, random_state=123, shuffle=False), estimator=PowerTransformedTargetRegressor(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=1...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=20,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.0,
                                                        n_estimators=100,
                                                        n_jobs=-1,
                                                        num_leaves=31,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0,
                                                        reg_lambda=0.0,
                                                        silent=True,
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent=True, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))
2021-01-11 02:06:03,813:INFO:Checking exceptions
2021-01-11 02:06:03,814:INFO:Importing libraries
2021-01-11 02:06:03,814:INFO:Copying training dataset
2021-01-11 02:06:03,814:INFO:Defining folds
2021-01-11 02:06:03,814:INFO:Declaring metric variables
2021-01-11 02:06:03,815:INFO:Importing untrained model
2021-01-11 02:06:03,815:INFO:Declaring custom model
2021-01-11 02:06:03,817:INFO:Light Gradient Boosting Machine Imported succesfully
2021-01-11 02:06:03,818:INFO:Cross validation set to False
2021-01-11 02:06:03,818:INFO:Fitting Model
2021-01-11 02:06:03,920:INFO:PowerTransformedTargetRegressor(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=1...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=20,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.0,
                                                        n_estimators=100,
                                                        n_jobs=-1,
                                                        num_leaves=31,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0,
                                                        reg_lambda=0.0,
                                                        silent=True,
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent=True, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0)
2021-01-11 02:06:03,920:INFO:create_models() succesfully completed......................................
2021-01-11 02:06:04,066:INFO:Creating MLFlow logs
2021-01-11 02:06:04,084:INFO:Model: Light Gradient Boosting Machine
2021-01-11 02:06:04,100:INFO:logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 123, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'silent': True, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2021-01-11 02:06:04,131:INFO:Initializing predict_model()
2021-01-11 02:06:04,131:INFO:predict_model(display=None, ml_usecase=None, verbose=False, round=4, encoded_labels=False, probability_threshold=None, estimator=PowerTransformedTargetRegressor(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=1...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=20,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.0,
                                                        n_estimators=100,
                                                        n_jobs=-1,
                                                        num_leaves=31,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0,
                                                        reg_lambda=0.0,
                                                        silent=True,
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent=True, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))
2021-01-11 02:06:04,131:INFO:Checking exceptions
2021-01-11 02:06:04,131:INFO:Preloading libraries
2021-01-11 02:06:04,577:INFO:Creating MLFlow logs
2021-01-11 02:06:04,598:INFO:Model: Random Forest Regressor
2021-01-11 02:06:04,615:INFO:logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'criterion': 'mse', 'max_depth': None, 'max_features': 'auto', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 123, 'verbose': 0, 'warm_start': False}
2021-01-11 02:06:04,903:INFO:Creating MLFlow logs
2021-01-11 02:06:04,920:INFO:Model: Extra Trees Regressor
2021-01-11 02:06:04,940:INFO:logged params: {'bootstrap': False, 'ccp_alpha': 0.0, 'criterion': 'mse', 'max_depth': None, 'max_features': 'auto', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 123, 'verbose': 0, 'warm_start': False}
2021-01-11 02:06:05,223:INFO:Creating MLFlow logs
2021-01-11 02:06:05,240:INFO:Model: Ridge Regression
2021-01-11 02:06:05,256:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'normalize': False, 'random_state': 123, 'solver': 'auto', 'tol': 0.001}
2021-01-11 02:06:05,539:INFO:Creating MLFlow logs
2021-01-11 02:06:05,555:INFO:Model: Huber Regressor
2021-01-11 02:06:05,572:INFO:logged params: {'alpha': 0.0001, 'epsilon': 1.35, 'fit_intercept': True, 'max_iter': 100, 'tol': 1e-05, 'warm_start': False}
2021-01-11 02:06:05,857:INFO:Creating MLFlow logs
2021-01-11 02:06:05,872:INFO:Model: Bayesian Ridge
2021-01-11 02:06:05,888:INFO:logged params: {'alpha_1': 1e-06, 'alpha_2': 1e-06, 'alpha_init': None, 'compute_score': False, 'copy_X': True, 'fit_intercept': True, 'lambda_1': 1e-06, 'lambda_2': 1e-06, 'lambda_init': None, 'n_iter': 300, 'normalize': False, 'tol': 0.001, 'verbose': False}
2021-01-11 02:06:06,171:INFO:Creating MLFlow logs
2021-01-11 02:06:06,187:INFO:Model: Linear Regression
2021-01-11 02:06:06,204:INFO:logged params: {'copy_X': True, 'fit_intercept': True, 'n_jobs': -1, 'normalize': False}
2021-01-11 02:06:06,490:INFO:Creating MLFlow logs
2021-01-11 02:06:06,506:INFO:Model: Decision Tree Regressor
2021-01-11 02:06:06,522:INFO:logged params: {'ccp_alpha': 0.0, 'criterion': 'mse', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'presort': 'deprecated', 'random_state': 123, 'splitter': 'best'}
2021-01-11 02:06:06,812:INFO:Creating MLFlow logs
2021-01-11 02:06:06,828:INFO:Model: Gradient Boosting Regressor
2021-01-11 02:06:06,846:INFO:logged params: {'alpha': 0.9, 'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'ls', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'presort': 'deprecated', 'random_state': 123, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2021-01-11 02:06:07,136:INFO:Creating MLFlow logs
2021-01-11 02:06:07,151:INFO:Model: Passive Aggressive Regressor
2021-01-11 02:06:07,168:INFO:logged params: {'C': 1.0, 'average': False, 'early_stopping': False, 'epsilon': 0.1, 'fit_intercept': True, 'loss': 'epsilon_insensitive', 'max_iter': 1000, 'n_iter_no_change': 5, 'random_state': 123, 'shuffle': True, 'tol': 0.001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2021-01-11 02:06:07,455:INFO:Creating MLFlow logs
2021-01-11 02:06:07,471:INFO:Model: Orthogonal Matching Pursuit
2021-01-11 02:06:07,488:INFO:logged params: {'fit_intercept': True, 'n_nonzero_coefs': None, 'normalize': True, 'precompute': 'auto', 'tol': None}
2021-01-11 02:06:07,775:INFO:Creating MLFlow logs
2021-01-11 02:06:07,791:INFO:Model: K Neighbors Regressor
2021-01-11 02:06:07,811:INFO:logged params: {'algorithm': 'auto', 'leaf_size': 30, 'metric': 'minkowski', 'metric_params': None, 'n_jobs': -1, 'n_neighbors': 5, 'p': 2, 'weights': 'uniform'}
2021-01-11 02:06:08,098:INFO:Creating MLFlow logs
2021-01-11 02:06:08,113:INFO:Model: AdaBoost Regressor
2021-01-11 02:06:08,129:INFO:logged params: {'base_estimator': None, 'learning_rate': 1.0, 'loss': 'linear', 'n_estimators': 50, 'random_state': 123}
2021-01-11 02:06:08,415:INFO:Creating MLFlow logs
2021-01-11 02:06:08,429:INFO:Model: Lasso Regression
2021-01-11 02:06:08,447:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': 1000, 'normalize': False, 'positive': False, 'precompute': False, 'random_state': 123, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2021-01-11 02:06:08,742:INFO:Creating MLFlow logs
2021-01-11 02:06:08,757:INFO:Model: Elastic Net
2021-01-11 02:06:08,781:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'l1_ratio': 0.5, 'max_iter': 1000, 'normalize': False, 'positive': False, 'precompute': False, 'random_state': 123, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2021-01-11 02:06:09,077:INFO:Creating MLFlow logs
2021-01-11 02:06:09,094:INFO:Model: Least Angle Regression
2021-01-11 02:06:09,111:INFO:logged params: {'alpha': 1.0, 'copy_X': True, 'eps': 2.220446049250313e-16, 'fit_intercept': True, 'fit_path': True, 'jitter': None, 'max_iter': 500, 'normalize': True, 'positive': False, 'precompute': 'auto', 'random_state': 123, 'verbose': False}
2021-01-11 02:06:09,406:INFO:create_model_container: 18
2021-01-11 02:06:09,406:INFO:master_model_container: 18
2021-01-11 02:06:09,406:INFO:display_container: 2
2021-01-11 02:06:09,414:INFO:[PowerTransformedTargetRegressor(border_count=254, loss_function='RMSE',
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=<catboost.core.CatBoostRegressor object at 0x7f2e0912c320>,
                                task_type='CPU', verbose=False), PowerTransformedTargetRegressor(base_score=None, booster='gbtree',
                                colsample_bylevel=None, colsample_bynode=None,
                                colsample_bytree=None, gamma=None, gpu_id=None,
                                importance_type='gain',
                                interaction_constraints=None,
                                learning_rate=None, max_delta_step=None,
                                max_depth=None, min_child_weight=None,
                                missing=nan, monotone_constraints=None,
                                n_estimators=100, n_jobs=-1,
                                nu...
                                                       missing=nan,
                                                       monotone_constraints=None,
                                                       n_estimators=100,
                                                       n_jobs=-1,
                                                       num_parallel_tree=None,
                                                       objective='reg:squarederror',
                                                       random_state=123,
                                                       reg_alpha=None,
                                                       reg_lambda=None,
                                                       scale_pos_weight=None,
                                                       subsample=None,
                                                       tree_method='auto',
                                                       validate_parameters=None,
                                                       verbosity=0),
                                scale_pos_weight=None, subsample=None,
                                tree_method='auto', validate_parameters=None,
                                verbosity=0), PowerTransformedTargetRegressor(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=1...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=20,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.0,
                                                        n_estimators=100,
                                                        n_jobs=-1,
                                                        num_leaves=31,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0,
                                                        reg_lambda=0.0,
                                                        silent=True,
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent=True, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0)]
2021-01-11 02:06:09,414:INFO:compare_models() succesfully completed......................................
2021-01-11 02:12:27,093:INFO:Initializing create_model()
2021-01-11 02:12:27,094:INFO:create_model(kwargs={}, display=None, metrics=None, system=True, verbose=True, refit=True, groups=None, fit_kwargs=None, predict=True, cross_validation=True, round=4, fold=5, estimator=dt)
2021-01-11 02:12:27,094:INFO:Checking exceptions
2021-01-11 02:12:27,094:INFO:Preparing display monitor
2021-01-11 02:12:27,141:INFO:Importing libraries
2021-01-11 02:12:27,142:INFO:Copying training dataset
2021-01-11 02:12:27,148:INFO:Defining folds
2021-01-11 02:12:27,148:INFO:Declaring metric variables
2021-01-11 02:12:27,170:INFO:Importing untrained model
2021-01-11 02:12:27,191:INFO:Decision Tree Regressor Imported succesfully
2021-01-11 02:12:27,236:INFO:Starting cross validation
2021-01-11 02:12:27,237:INFO:Cross validating with KFold(n_splits=5, random_state=123, shuffle=False), n_jobs=-1
2021-01-11 02:12:29,989:INFO:Calculating mean and std
2021-01-11 02:12:29,991:INFO:Creating metrics dataframe
2021-01-11 02:12:30,023:INFO:Finalizing model
2021-01-11 02:12:30,064:INFO:Creating MLFlow logs
2021-01-11 02:12:30,090:INFO:Model: Decision Tree Regressor
2021-01-11 02:12:30,107:INFO:logged params: {'ccp_alpha': 0.0, 'criterion': 'mse', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'presort': 'deprecated', 'random_state': 123, 'splitter': 'best'}
2021-01-11 02:12:30,141:INFO:Initializing predict_model()
2021-01-11 02:12:30,141:INFO:predict_model(display=None, ml_usecase=None, verbose=False, round=4, encoded_labels=False, probability_threshold=None, estimator=PowerTransformedTargetRegressor(ccp_alpha=0.0, criterion='mse', max_depth=None,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                presort='deprecated', random_state=123,
                                regressor=DecisionTreeRegressor(ccp_alpha=0.0,
                                                                criterion='mse',
                                                                max_depth=None,
                                                                max_features=None,
                                                                max_leaf_nodes=None,
                                                                min_impurity_decrease=0.0,
                                                                min_impurity_split=None,
                                                                min_samples_leaf=1,
                                                                min_samples_split=2,
                                                                min_weight_fraction_leaf=0.0,
                                                                presort='deprecated',
                                                                random_state=123,
                                                                splitter='best'),
                                splitter='best'))
2021-01-11 02:12:30,141:INFO:Checking exceptions
2021-01-11 02:12:30,141:INFO:Preloading libraries
2021-01-11 02:12:30,620:INFO:Uploading results into container
2021-01-11 02:12:30,620:INFO:Uploading model into container now
2021-01-11 02:12:30,638:INFO:create_model_container: 19
2021-01-11 02:12:30,638:INFO:master_model_container: 19
2021-01-11 02:12:30,639:INFO:display_container: 3
2021-01-11 02:12:30,641:INFO:PowerTransformedTargetRegressor(ccp_alpha=0.0, criterion='mse', max_depth=None,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                presort='deprecated', random_state=123,
                                regressor=DecisionTreeRegressor(ccp_alpha=0.0,
                                                                criterion='mse',
                                                                max_depth=None,
                                                                max_features=None,
                                                                max_leaf_nodes=None,
                                                                min_impurity_decrease=0.0,
                                                                min_impurity_split=None,
                                                                min_samples_leaf=1,
                                                                min_samples_split=2,
                                                                min_weight_fraction_leaf=0.0,
                                                                presort='deprecated',
                                                                random_state=123,
                                                                splitter='best'),
                                splitter='best')
2021-01-11 02:12:30,641:INFO:create_model() succesfully completed......................................
2021-01-11 02:12:53,337:INFO:Initializing create_model()
2021-01-11 02:12:53,337:INFO:create_model(kwargs={}, display=None, metrics=None, system=True, verbose=True, refit=True, groups=None, fit_kwargs=None, predict=True, cross_validation=True, round=2, fold=5, estimator=dt)
2021-01-11 02:12:53,337:INFO:Checking exceptions
2021-01-11 02:12:53,337:INFO:Preparing display monitor
2021-01-11 02:12:53,389:INFO:Importing libraries
2021-01-11 02:12:53,390:INFO:Copying training dataset
2021-01-11 02:12:53,393:INFO:Defining folds
2021-01-11 02:12:53,393:INFO:Declaring metric variables
2021-01-11 02:12:53,417:INFO:Importing untrained model
2021-01-11 02:12:53,440:INFO:Decision Tree Regressor Imported succesfully
2021-01-11 02:12:53,485:INFO:Starting cross validation
2021-01-11 02:12:53,486:INFO:Cross validating with KFold(n_splits=5, random_state=123, shuffle=False), n_jobs=-1
2021-01-11 02:12:53,705:INFO:Calculating mean and std
2021-01-11 02:12:53,706:INFO:Creating metrics dataframe
2021-01-11 02:12:53,732:INFO:Finalizing model
2021-01-11 02:12:53,772:INFO:Creating MLFlow logs
2021-01-11 02:12:53,796:INFO:Model: Decision Tree Regressor
2021-01-11 02:12:53,814:INFO:logged params: {'ccp_alpha': 0.0, 'criterion': 'mse', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'presort': 'deprecated', 'random_state': 123, 'splitter': 'best'}
2021-01-11 02:12:53,847:INFO:Initializing predict_model()
2021-01-11 02:12:53,848:INFO:predict_model(display=None, ml_usecase=None, verbose=False, round=4, encoded_labels=False, probability_threshold=None, estimator=PowerTransformedTargetRegressor(ccp_alpha=0.0, criterion='mse', max_depth=None,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                presort='deprecated', random_state=123,
                                regressor=DecisionTreeRegressor(ccp_alpha=0.0,
                                                                criterion='mse',
                                                                max_depth=None,
                                                                max_features=None,
                                                                max_leaf_nodes=None,
                                                                min_impurity_decrease=0.0,
                                                                min_impurity_split=None,
                                                                min_samples_leaf=1,
                                                                min_samples_split=2,
                                                                min_weight_fraction_leaf=0.0,
                                                                presort='deprecated',
                                                                random_state=123,
                                                                splitter='best'),
                                splitter='best'))
2021-01-11 02:12:53,848:INFO:Checking exceptions
2021-01-11 02:12:53,848:INFO:Preloading libraries
2021-01-11 02:12:54,307:INFO:Uploading results into container
2021-01-11 02:12:54,307:INFO:Uploading model into container now
2021-01-11 02:12:54,328:INFO:create_model_container: 20
2021-01-11 02:12:54,328:INFO:master_model_container: 20
2021-01-11 02:12:54,328:INFO:display_container: 4
2021-01-11 02:12:54,330:INFO:PowerTransformedTargetRegressor(ccp_alpha=0.0, criterion='mse', max_depth=None,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                presort='deprecated', random_state=123,
                                regressor=DecisionTreeRegressor(ccp_alpha=0.0,
                                                                criterion='mse',
                                                                max_depth=None,
                                                                max_features=None,
                                                                max_leaf_nodes=None,
                                                                min_impurity_decrease=0.0,
                                                                min_impurity_split=None,
                                                                min_samples_leaf=1,
                                                                min_samples_split=2,
                                                                min_weight_fraction_leaf=0.0,
                                                                presort='deprecated',
                                                                random_state=123,
                                                                splitter='best'),
                                splitter='best')
2021-01-11 02:12:54,331:INFO:create_model() succesfully completed......................................
2021-01-11 02:13:02,159:INFO:Initializing create_model()
2021-01-11 02:13:02,159:INFO:create_model(kwargs={}, display=None, metrics=None, system=True, verbose=True, refit=True, groups=None, fit_kwargs=None, predict=True, cross_validation=True, round=3, fold=5, estimator=dt)
2021-01-11 02:13:02,159:INFO:Checking exceptions
2021-01-11 02:13:02,159:INFO:Preparing display monitor
2021-01-11 02:13:02,217:INFO:Importing libraries
2021-01-11 02:13:02,217:INFO:Copying training dataset
2021-01-11 02:13:02,222:INFO:Defining folds
2021-01-11 02:13:02,222:INFO:Declaring metric variables
2021-01-11 02:13:02,246:INFO:Importing untrained model
2021-01-11 02:13:02,269:INFO:Decision Tree Regressor Imported succesfully
2021-01-11 02:13:02,320:INFO:Starting cross validation
2021-01-11 02:13:02,321:INFO:Cross validating with KFold(n_splits=5, random_state=123, shuffle=False), n_jobs=-1
2021-01-11 02:13:02,531:INFO:Calculating mean and std
2021-01-11 02:13:02,533:INFO:Creating metrics dataframe
2021-01-11 02:13:02,561:INFO:Finalizing model
2021-01-11 02:13:02,600:INFO:Creating MLFlow logs
2021-01-11 02:13:02,629:INFO:Model: Decision Tree Regressor
2021-01-11 02:13:02,651:INFO:logged params: {'ccp_alpha': 0.0, 'criterion': 'mse', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'presort': 'deprecated', 'random_state': 123, 'splitter': 'best'}
2021-01-11 02:13:02,686:INFO:Initializing predict_model()
2021-01-11 02:13:02,686:INFO:predict_model(display=None, ml_usecase=None, verbose=False, round=4, encoded_labels=False, probability_threshold=None, estimator=PowerTransformedTargetRegressor(ccp_alpha=0.0, criterion='mse', max_depth=None,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                presort='deprecated', random_state=123,
                                regressor=DecisionTreeRegressor(ccp_alpha=0.0,
                                                                criterion='mse',
                                                                max_depth=None,
                                                                max_features=None,
                                                                max_leaf_nodes=None,
                                                                min_impurity_decrease=0.0,
                                                                min_impurity_split=None,
                                                                min_samples_leaf=1,
                                                                min_samples_split=2,
                                                                min_weight_fraction_leaf=0.0,
                                                                presort='deprecated',
                                                                random_state=123,
                                                                splitter='best'),
                                splitter='best'))
2021-01-11 02:13:02,686:INFO:Checking exceptions
2021-01-11 02:13:02,686:INFO:Preloading libraries
2021-01-11 02:13:03,141:INFO:Uploading results into container
2021-01-11 02:13:03,142:INFO:Uploading model into container now
2021-01-11 02:13:03,164:INFO:create_model_container: 21
2021-01-11 02:13:03,164:INFO:master_model_container: 21
2021-01-11 02:13:03,164:INFO:display_container: 5
2021-01-11 02:13:03,166:INFO:PowerTransformedTargetRegressor(ccp_alpha=0.0, criterion='mse', max_depth=None,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                presort='deprecated', random_state=123,
                                regressor=DecisionTreeRegressor(ccp_alpha=0.0,
                                                                criterion='mse',
                                                                max_depth=None,
                                                                max_features=None,
                                                                max_leaf_nodes=None,
                                                                min_impurity_decrease=0.0,
                                                                min_impurity_split=None,
                                                                min_samples_leaf=1,
                                                                min_samples_split=2,
                                                                min_weight_fraction_leaf=0.0,
                                                                presort='deprecated',
                                                                random_state=123,
                                                                splitter='best'),
                                splitter='best')
2021-01-11 02:13:03,166:INFO:create_model() succesfully completed......................................
2021-01-11 02:15:05,188:INFO:Initializing create_model()
2021-01-11 02:15:05,188:INFO:create_model(kwargs={}, display=None, metrics=None, system=True, verbose=True, refit=True, groups=None, fit_kwargs=None, predict=True, cross_validation=True, round=3, fold=10, estimator=rf)
2021-01-11 02:15:05,188:INFO:Checking exceptions
2021-01-11 02:15:05,188:INFO:Preparing display monitor
2021-01-11 02:15:05,228:INFO:Importing libraries
2021-01-11 02:15:05,228:INFO:Copying training dataset
2021-01-11 02:15:05,230:INFO:Defining folds
2021-01-11 02:15:05,231:INFO:Declaring metric variables
2021-01-11 02:15:05,252:INFO:Importing untrained model
2021-01-11 02:15:05,271:INFO:Random Forest Regressor Imported succesfully
2021-01-11 02:15:05,313:INFO:Starting cross validation
2021-01-11 02:15:05,314:INFO:Cross validating with KFold(n_splits=10, random_state=123, shuffle=False), n_jobs=-1
2021-01-11 02:15:17,502:INFO:Calculating mean and std
2021-01-11 02:15:17,503:INFO:Creating metrics dataframe
2021-01-11 02:15:17,532:INFO:Finalizing model
2021-01-11 02:15:18,998:INFO:Creating MLFlow logs
2021-01-11 02:15:19,022:INFO:Model: Random Forest Regressor
2021-01-11 02:15:19,040:INFO:logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'criterion': 'mse', 'max_depth': None, 'max_features': 'auto', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 123, 'verbose': 0, 'warm_start': False}
2021-01-11 02:15:19,073:INFO:Initializing predict_model()
2021-01-11 02:15:19,073:INFO:predict_model(display=None, ml_usecase=None, verbose=False, round=4, encoded_labels=False, probability_threshold=None, estimator=PowerTransformedTargetRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',
                                max_depth=None, max_features='auto',
                                max_leaf_nodes=None, max_samples=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_jobs=-1, oob_score=False,
                                power_transformer_method='box-cox',
                                power...
                                regressor=RandomForestRegressor(bootstrap=True,
                                                                ccp_alpha=0.0,
                                                                criterion='mse',
                                                                max_depth=None,
                                                                max_features='auto',
                                                                max_leaf_nodes=None,
                                                                max_samples=None,
                                                                min_impurity_decrease=0.0,
                                                                min_impurity_split=None,
                                                                min_samples_leaf=1,
                                                                min_samples_split=2,
                                                                min_weight_fraction_leaf=0.0,
                                                                n_estimators=100,
                                                                n_jobs=-1,
                                                                oob_score=False,
                                                                random_state=123,
                                                                verbose=0,
                                                                warm_start=False),
                                verbose=0, warm_start=False))
2021-01-11 02:15:19,073:INFO:Checking exceptions
2021-01-11 02:15:19,073:INFO:Preloading libraries
2021-01-11 02:15:19,705:INFO:Uploading results into container
2021-01-11 02:15:19,705:INFO:Uploading model into container now
2021-01-11 02:15:19,730:INFO:create_model_container: 22
2021-01-11 02:15:19,730:INFO:master_model_container: 22
2021-01-11 02:15:19,730:INFO:display_container: 6
2021-01-11 02:15:19,733:INFO:PowerTransformedTargetRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',
                                max_depth=None, max_features='auto',
                                max_leaf_nodes=None, max_samples=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_jobs=-1, oob_score=False,
                                power_transformer_method='box-cox',
                                power...
                                regressor=RandomForestRegressor(bootstrap=True,
                                                                ccp_alpha=0.0,
                                                                criterion='mse',
                                                                max_depth=None,
                                                                max_features='auto',
                                                                max_leaf_nodes=None,
                                                                max_samples=None,
                                                                min_impurity_decrease=0.0,
                                                                min_impurity_split=None,
                                                                min_samples_leaf=1,
                                                                min_samples_split=2,
                                                                min_weight_fraction_leaf=0.0,
                                                                n_estimators=100,
                                                                n_jobs=-1,
                                                                oob_score=False,
                                                                random_state=123,
                                                                verbose=0,
                                                                warm_start=False),
                                verbose=0, warm_start=False)
2021-01-11 02:15:19,733:INFO:create_model() succesfully completed......................................
2021-01-11 02:15:30,261:INFO:Initializing create_model()
2021-01-11 02:15:30,262:INFO:create_model(kwargs={}, display=None, metrics=None, system=True, verbose=True, refit=True, groups=None, fit_kwargs=None, predict=True, cross_validation=True, round=3, fold=10, estimator=knn)
2021-01-11 02:15:30,262:INFO:Checking exceptions
2021-01-11 02:15:30,262:INFO:Preparing display monitor
2021-01-11 02:15:30,304:INFO:Importing libraries
2021-01-11 02:15:30,304:INFO:Copying training dataset
2021-01-11 02:15:30,306:INFO:Defining folds
2021-01-11 02:15:30,306:INFO:Declaring metric variables
2021-01-11 02:15:30,328:INFO:Importing untrained model
2021-01-11 02:15:30,347:INFO:K Neighbors Regressor Imported succesfully
2021-01-11 02:15:30,389:INFO:Starting cross validation
2021-01-11 02:15:30,390:INFO:Cross validating with KFold(n_splits=10, random_state=123, shuffle=False), n_jobs=-1
2021-01-11 02:15:31,925:INFO:Calculating mean and std
2021-01-11 02:15:31,926:INFO:Creating metrics dataframe
2021-01-11 02:15:31,954:INFO:Finalizing model
2021-01-11 02:15:32,004:INFO:Creating MLFlow logs
2021-01-11 02:15:32,028:INFO:Model: K Neighbors Regressor
2021-01-11 02:15:32,045:INFO:logged params: {'algorithm': 'auto', 'leaf_size': 30, 'metric': 'minkowski', 'metric_params': None, 'n_jobs': -1, 'n_neighbors': 5, 'p': 2, 'weights': 'uniform'}
2021-01-11 02:15:32,076:INFO:Initializing predict_model()
2021-01-11 02:15:32,076:INFO:predict_model(display=None, ml_usecase=None, verbose=False, round=4, encoded_labels=False, probability_threshold=None, estimator=PowerTransformedTargetRegressor(algorithm='auto', leaf_size=30,
                                metric='minkowski', metric_params=None,
                                n_jobs=-1, n_neighbors=5, p=2,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=KNeighborsRegressor(algorithm='auto',
                                                              leaf_size=30,
                                                              metric='minkowski',
                                                              metric_params=None,
                                                              n_jobs=-1,
                                                              n_neighbors=5,
                                                              p=2,
                                                              weights='uniform'),
                                weights='uniform'))
2021-01-11 02:15:32,076:INFO:Checking exceptions
2021-01-11 02:15:32,076:INFO:Preloading libraries
2021-01-11 02:15:33,118:INFO:Uploading results into container
2021-01-11 02:15:33,118:INFO:Uploading model into container now
2021-01-11 02:15:33,141:INFO:create_model_container: 23
2021-01-11 02:15:33,142:INFO:master_model_container: 23
2021-01-11 02:15:33,142:INFO:display_container: 7
2021-01-11 02:15:33,144:INFO:PowerTransformedTargetRegressor(algorithm='auto', leaf_size=30,
                                metric='minkowski', metric_params=None,
                                n_jobs=-1, n_neighbors=5, p=2,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=KNeighborsRegressor(algorithm='auto',
                                                              leaf_size=30,
                                                              metric='minkowski',
                                                              metric_params=None,
                                                              n_jobs=-1,
                                                              n_neighbors=5,
                                                              p=2,
                                                              weights='uniform'),
                                weights='uniform')
2021-01-11 02:15:33,144:INFO:create_model() succesfully completed......................................
2021-01-11 02:16:15,189:INFO:Initializing tune_model()
2021-01-11 02:16:15,190:INFO:tune_model(kwargs={}, display=None, tuner_verbose=True, verbose=True, return_tuner=False, groups=None, fit_kwargs=None, choose_better=False, early_stopping_max_iters=10, early_stopping=False, search_algorithm=None, search_library=scikit-learn, custom_scorer=None, optimize=R2, custom_grid=None, n_iter=10, round=4, fold=None, estimator=PowerTransformedTargetRegressor(algorithm='auto', leaf_size=30,
                                metric='minkowski', metric_params=None,
                                n_jobs=-1, n_neighbors=5, p=2,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=KNeighborsRegressor(algorithm='auto',
                                                              leaf_size=30,
                                                              metric='minkowski',
                                                              metric_params=None,
                                                              n_jobs=-1,
                                                              n_neighbors=5,
                                                              p=2,
                                                              weights='uniform'),
                                weights='uniform'))
2021-01-11 02:16:15,190:INFO:Checking exceptions
2021-01-11 02:16:15,190:INFO:Preparing display monitor
2021-01-11 02:16:15,237:INFO:Copying training dataset
2021-01-11 02:16:15,241:INFO:Checking base model
2021-01-11 02:16:15,244:INFO:Base model : K Neighbors Regressor
2021-01-11 02:16:15,267:INFO:Declaring metric variables
2021-01-11 02:16:15,291:INFO:Defining Hyperparameters
2021-01-11 02:16:15,445:INFO:Tuning with n_jobs=-1
2021-01-11 02:16:15,446:INFO:Initializing RandomizedSearchCV
2021-01-11 02:16:29,313:INFO:best_params: {'actual_estimator__weights': 'distance', 'actual_estimator__n_neighbors': 9, 'actual_estimator__metric': 'minkowski'}
2021-01-11 02:16:29,314:INFO:Random search completed
2021-01-11 02:16:29,314:INFO:SubProcess create_model() called ==================================
2021-01-11 02:16:29,315:INFO:Initializing create_model()
2021-01-11 02:16:29,315:INFO:create_model(kwargs={'weights': 'distance', 'n_neighbors': 9, 'metric': 'minkowski'}, display=<pycaret.internal.Display.Display object at 0x7f2e08721a58>, metrics=None, system=False, verbose=True, refit=True, groups=None, fit_kwargs={}, predict=True, cross_validation=True, round=4, fold=KFold(n_splits=10, random_state=123, shuffle=False), estimator=PowerTransformedTargetRegressor(algorithm='auto', leaf_size=30,
                                metric='minkowski', metric_params=None,
                                n_jobs=-1, n_neighbors=5, p=2,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=KNeighborsRegressor(algorithm='auto',
                                                              leaf_size=30,
                                                              metric='minkowski',
                                                              metric_params=None,
                                                              n_jobs=-1,
                                                              n_neighbors=5,
                                                              p=2,
                                                              weights='uniform'),
                                weights='uniform'))
2021-01-11 02:16:29,315:INFO:Checking exceptions
2021-01-11 02:16:29,316:INFO:Importing libraries
2021-01-11 02:16:29,316:INFO:Copying training dataset
2021-01-11 02:16:29,322:INFO:Defining folds
2021-01-11 02:16:29,322:INFO:Declaring metric variables
2021-01-11 02:16:29,351:INFO:Importing untrained model
2021-01-11 02:16:29,352:INFO:Declaring custom model
2021-01-11 02:16:29,375:INFO:K Neighbors Regressor Imported succesfully
2021-01-11 02:16:29,421:INFO:Starting cross validation
2021-01-11 02:16:29,422:INFO:Cross validating with KFold(n_splits=10, random_state=123, shuffle=False), n_jobs=-1
2021-01-11 02:16:30,859:INFO:Calculating mean and std
2021-01-11 02:16:30,860:INFO:Creating metrics dataframe
2021-01-11 02:16:30,889:INFO:Finalizing model
2021-01-11 02:16:30,937:INFO:Uploading results into container
2021-01-11 02:16:30,937:INFO:Uploading model into container now
2021-01-11 02:16:30,937:INFO:create_model_container: 24
2021-01-11 02:16:30,937:INFO:master_model_container: 24
2021-01-11 02:16:30,937:INFO:display_container: 8
2021-01-11 02:16:30,938:INFO:PowerTransformedTargetRegressor(algorithm='auto', leaf_size=30,
                                metric='minkowski', metric_params=None,
                                n_jobs=-1, n_neighbors=9, p=2,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=KNeighborsRegressor(algorithm='auto',
                                                              leaf_size=30,
                                                              metric='minkowski',
                                                              metric_params=None,
                                                              n_jobs=-1,
                                                              n_neighbors=9,
                                                              p=2,
                                                              weights='distance'),
                                weights='distance')
2021-01-11 02:16:30,938:INFO:create_model() succesfully completed......................................
2021-01-11 02:16:31,091:INFO:SubProcess create_model() end ==================================
2021-01-11 02:16:31,092:INFO:Creating MLFlow logs
2021-01-11 02:16:31,117:INFO:Model: K Neighbors Regressor
2021-01-11 02:16:31,137:INFO:logged params: {'algorithm': 'auto', 'leaf_size': 30, 'metric': 'minkowski', 'metric_params': None, 'n_jobs': -1, 'n_neighbors': 9, 'p': 2, 'weights': 'distance'}
2021-01-11 02:16:31,167:INFO:Initializing predict_model()
2021-01-11 02:16:31,167:INFO:predict_model(display=None, ml_usecase=None, verbose=False, round=4, encoded_labels=False, probability_threshold=None, estimator=PowerTransformedTargetRegressor(algorithm='auto', leaf_size=30,
                                metric='minkowski', metric_params=None,
                                n_jobs=-1, n_neighbors=9, p=2,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=KNeighborsRegressor(algorithm='auto',
                                                              leaf_size=30,
                                                              metric='minkowski',
                                                              metric_params=None,
                                                              n_jobs=-1,
                                                              n_neighbors=9,
                                                              p=2,
                                                              weights='distance'),
                                weights='distance'))
2021-01-11 02:16:31,167:INFO:Checking exceptions
2021-01-11 02:16:31,167:INFO:Preloading libraries
2021-01-11 02:16:32,232:INFO:create_model_container: 24
2021-01-11 02:16:32,232:INFO:master_model_container: 24
2021-01-11 02:16:32,232:INFO:display_container: 8
2021-01-11 02:16:32,233:INFO:PowerTransformedTargetRegressor(algorithm='auto', leaf_size=30,
                                metric='minkowski', metric_params=None,
                                n_jobs=-1, n_neighbors=9, p=2,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=KNeighborsRegressor(algorithm='auto',
                                                              leaf_size=30,
                                                              metric='minkowski',
                                                              metric_params=None,
                                                              n_jobs=-1,
                                                              n_neighbors=9,
                                                              p=2,
                                                              weights='distance'),
                                weights='distance')
2021-01-11 02:16:32,233:INFO:tune_model() succesfully completed......................................
2021-01-11 02:16:59,901:INFO:Initializing tune_model()
2021-01-11 02:16:59,901:INFO:tune_model(kwargs={}, display=None, tuner_verbose=True, verbose=True, return_tuner=False, groups=None, fit_kwargs=None, choose_better=False, early_stopping_max_iters=10, early_stopping=False, search_algorithm=None, search_library=scikit-learn, custom_scorer=None, optimize=R2, custom_grid=None, n_iter=50, round=4, fold=None, estimator=PowerTransformedTargetRegressor(algorithm='auto', leaf_size=30,
                                metric='minkowski', metric_params=None,
                                n_jobs=-1, n_neighbors=5, p=2,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=KNeighborsRegressor(algorithm='auto',
                                                              leaf_size=30,
                                                              metric='minkowski',
                                                              metric_params=None,
                                                              n_jobs=-1,
                                                              n_neighbors=5,
                                                              p=2,
                                                              weights='uniform'),
                                weights='uniform'))
2021-01-11 02:16:59,901:INFO:Checking exceptions
2021-01-11 02:16:59,901:INFO:Preparing display monitor
2021-01-11 02:16:59,940:INFO:Copying training dataset
2021-01-11 02:16:59,942:INFO:Checking base model
2021-01-11 02:16:59,943:INFO:Base model : K Neighbors Regressor
2021-01-11 02:16:59,963:INFO:Declaring metric variables
2021-01-11 02:16:59,983:INFO:Defining Hyperparameters
2021-01-11 02:17:00,138:INFO:Tuning with n_jobs=-1
2021-01-11 02:17:00,138:INFO:Initializing RandomizedSearchCV
2021-01-11 02:18:09,483:INFO:best_params: {'actual_estimator__weights': 'distance', 'actual_estimator__n_neighbors': 3, 'actual_estimator__metric': 'manhattan'}
2021-01-11 02:18:09,484:INFO:Random search completed
2021-01-11 02:18:09,484:INFO:SubProcess create_model() called ==================================
2021-01-11 02:18:09,485:INFO:Initializing create_model()
2021-01-11 02:18:09,485:INFO:create_model(kwargs={'weights': 'distance', 'n_neighbors': 3, 'metric': 'manhattan'}, display=<pycaret.internal.Display.Display object at 0x7f2e08f7c2b0>, metrics=None, system=False, verbose=True, refit=True, groups=None, fit_kwargs={}, predict=True, cross_validation=True, round=4, fold=KFold(n_splits=10, random_state=123, shuffle=False), estimator=PowerTransformedTargetRegressor(algorithm='auto', leaf_size=30,
                                metric='minkowski', metric_params=None,
                                n_jobs=-1, n_neighbors=5, p=2,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=KNeighborsRegressor(algorithm='auto',
                                                              leaf_size=30,
                                                              metric='minkowski',
                                                              metric_params=None,
                                                              n_jobs=-1,
                                                              n_neighbors=5,
                                                              p=2,
                                                              weights='uniform'),
                                weights='uniform'))
2021-01-11 02:18:09,485:INFO:Checking exceptions
2021-01-11 02:18:09,486:INFO:Importing libraries
2021-01-11 02:18:09,486:INFO:Copying training dataset
2021-01-11 02:18:09,487:INFO:Defining folds
2021-01-11 02:18:09,487:INFO:Declaring metric variables
2021-01-11 02:18:09,516:INFO:Importing untrained model
2021-01-11 02:18:09,516:INFO:Declaring custom model
2021-01-11 02:18:09,538:INFO:K Neighbors Regressor Imported succesfully
2021-01-11 02:18:09,578:INFO:Starting cross validation
2021-01-11 02:18:09,579:INFO:Cross validating with KFold(n_splits=10, random_state=123, shuffle=False), n_jobs=-1
2021-01-11 02:18:10,992:INFO:Calculating mean and std
2021-01-11 02:18:10,993:INFO:Creating metrics dataframe
2021-01-11 02:18:11,022:INFO:Finalizing model
2021-01-11 02:18:11,074:INFO:Uploading results into container
2021-01-11 02:18:11,074:INFO:Uploading model into container now
2021-01-11 02:18:11,074:INFO:create_model_container: 25
2021-01-11 02:18:11,074:INFO:master_model_container: 25
2021-01-11 02:18:11,074:INFO:display_container: 9
2021-01-11 02:18:11,075:INFO:PowerTransformedTargetRegressor(algorithm='auto', leaf_size=30,
                                metric='manhattan', metric_params=None,
                                n_jobs=-1, n_neighbors=3, p=2,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=KNeighborsRegressor(algorithm='auto',
                                                              leaf_size=30,
                                                              metric='manhattan',
                                                              metric_params=None,
                                                              n_jobs=-1,
                                                              n_neighbors=3,
                                                              p=2,
                                                              weights='distance'),
                                weights='distance')
2021-01-11 02:18:11,075:INFO:create_model() succesfully completed......................................
2021-01-11 02:18:11,232:INFO:SubProcess create_model() end ==================================
2021-01-11 02:18:11,233:INFO:Creating MLFlow logs
2021-01-11 02:18:11,260:INFO:Model: K Neighbors Regressor
2021-01-11 02:18:11,278:INFO:logged params: {'algorithm': 'auto', 'leaf_size': 30, 'metric': 'manhattan', 'metric_params': None, 'n_jobs': -1, 'n_neighbors': 3, 'p': 2, 'weights': 'distance'}
2021-01-11 02:18:11,309:INFO:Initializing predict_model()
2021-01-11 02:18:11,309:INFO:predict_model(display=None, ml_usecase=None, verbose=False, round=4, encoded_labels=False, probability_threshold=None, estimator=PowerTransformedTargetRegressor(algorithm='auto', leaf_size=30,
                                metric='manhattan', metric_params=None,
                                n_jobs=-1, n_neighbors=3, p=2,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=KNeighborsRegressor(algorithm='auto',
                                                              leaf_size=30,
                                                              metric='manhattan',
                                                              metric_params=None,
                                                              n_jobs=-1,
                                                              n_neighbors=3,
                                                              p=2,
                                                              weights='distance'),
                                weights='distance'))
2021-01-11 02:18:11,309:INFO:Checking exceptions
2021-01-11 02:18:11,309:INFO:Preloading libraries
2021-01-11 02:18:12,281:INFO:create_model_container: 25
2021-01-11 02:18:12,281:INFO:master_model_container: 25
2021-01-11 02:18:12,281:INFO:display_container: 9
2021-01-11 02:18:12,283:INFO:PowerTransformedTargetRegressor(algorithm='auto', leaf_size=30,
                                metric='manhattan', metric_params=None,
                                n_jobs=-1, n_neighbors=3, p=2,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=KNeighborsRegressor(algorithm='auto',
                                                              leaf_size=30,
                                                              metric='manhattan',
                                                              metric_params=None,
                                                              n_jobs=-1,
                                                              n_neighbors=3,
                                                              p=2,
                                                              weights='distance'),
                                weights='distance')
2021-01-11 02:18:12,283:INFO:tune_model() succesfully completed......................................
2021-01-11 02:20:30,022:INFO:Initializing plot_model()
2021-01-11 02:20:30,023:INFO:plot_model(verbose=True, use_train_data=False, fold=None, plot=parameter, system=True, scale=1, save=False, label=False, groups=None, fit_kwargs=None, feature_name=None, estimator=PowerTransformedTargetRegressor(algorithm='auto', leaf_size=30,
                                metric='minkowski', metric_params=None,
                                n_jobs=-1, n_neighbors=9, p=2,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=KNeighborsRegressor(algorithm='auto',
                                                              leaf_size=30,
                                                              metric='minkowski',
                                                              metric_params=None,
                                                              n_jobs=-1,
                                                              n_neighbors=9,
                                                              p=2,
                                                              weights='distance'),
                                weights='distance'), display=None)
2021-01-11 02:20:30,023:INFO:Checking exceptions
2021-01-11 02:20:30,023:INFO:Preparing display monitor
2021-01-11 02:20:30,041:INFO:Preloading libraries
2021-01-11 02:20:30,044:INFO:Copying training dataset
2021-01-11 02:20:30,044:INFO:Copying test dataset
2021-01-11 02:20:30,047:INFO:Plot type: parameter
2021-01-11 02:20:30,138:INFO:Visual Rendered Successfully
2021-01-11 02:20:30,297:INFO:plot_model() succesfully completed......................................
2021-01-11 02:20:45,418:INFO:Initializing plot_model()
2021-01-11 02:20:45,419:INFO:plot_model(verbose=True, use_train_data=False, fold=None, plot=parameter, system=True, scale=1, save=False, label=False, groups=None, fit_kwargs=None, feature_name=None, estimator=PowerTransformedTargetRegressor(algorithm='auto', leaf_size=30,
                                metric='manhattan', metric_params=None,
                                n_jobs=-1, n_neighbors=3, p=2,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=KNeighborsRegressor(algorithm='auto',
                                                              leaf_size=30,
                                                              metric='manhattan',
                                                              metric_params=None,
                                                              n_jobs=-1,
                                                              n_neighbors=3,
                                                              p=2,
                                                              weights='distance'),
                                weights='distance'), display=None)
2021-01-11 02:20:45,420:INFO:Checking exceptions
2021-01-11 02:20:45,420:INFO:Preparing display monitor
2021-01-11 02:20:45,439:INFO:Preloading libraries
2021-01-11 02:20:45,443:INFO:Copying training dataset
2021-01-11 02:20:45,445:INFO:Copying test dataset
2021-01-11 02:20:45,447:INFO:Plot type: parameter
2021-01-11 02:20:45,466:INFO:Visual Rendered Successfully
2021-01-11 02:20:45,625:INFO:plot_model() succesfully completed......................................
2021-01-11 02:27:50,436:INFO:Initializing create_model()
2021-01-11 02:27:50,436:INFO:create_model(kwargs={}, display=None, metrics=None, system=True, verbose=True, refit=True, groups=None, fit_kwargs=None, predict=True, cross_validation=True, round=3, fold=10, estimator=catboost)
2021-01-11 02:27:50,436:INFO:Checking exceptions
2021-01-11 02:27:50,437:INFO:Preparing display monitor
2021-01-11 02:27:50,485:INFO:Importing libraries
2021-01-11 02:27:50,486:INFO:Copying training dataset
2021-01-11 02:27:50,488:INFO:Defining folds
2021-01-11 02:27:50,488:INFO:Declaring metric variables
2021-01-11 02:27:50,512:INFO:Importing untrained model
2021-01-11 02:27:50,535:INFO:CatBoost Regressor Imported succesfully
2021-01-11 02:27:50,583:INFO:Starting cross validation
2021-01-11 02:27:50,584:INFO:Cross validating with KFold(n_splits=10, random_state=123, shuffle=False), n_jobs=-1
2021-01-11 02:28:04,621:INFO:Calculating mean and std
2021-01-11 02:28:04,623:INFO:Creating metrics dataframe
2021-01-11 02:28:04,652:INFO:Finalizing model
2021-01-11 02:28:05,875:INFO:Creating MLFlow logs
2021-01-11 02:28:05,905:INFO:Model: CatBoost Regressor
2021-01-11 02:28:05,923:INFO:logged params: {'nan_mode': 'Min', 'eval_metric': 'RMSE', 'iterations': 1000, 'sampling_frequency': 'PerTree', 'leaf_estimation_method': 'Newton', 'grow_policy': 'SymmetricTree', 'penalties_coefficient': 1, 'boosting_type': 'Plain', 'model_shrink_mode': 'Constant', 'feature_border_type': 'GreedyLogSum', 'bayesian_matrix_reg': 0.10000000149011612, 'l2_leaf_reg': 3, 'random_strength': 1, 'rsm': 1, 'boost_from_average': True, 'model_size_reg': 0.5, 'subsample': 0.800000011920929, 'use_best_model': False, 'random_seed': 123, 'depth': 6, 'posterior_sampling': False, 'border_count': 254, 'classes_count': 0, 'auto_class_weights': 'None', 'sparse_features_conflict_fraction': 0, 'leaf_estimation_backtracking': 'AnyImprovement', 'best_model_min_trees': 1, 'model_shrink_rate': 0, 'min_data_in_leaf': 1, 'loss_function': 'RMSE', 'learning_rate': 0.05038699880242348, 'score_function': 'Cosine', 'task_type': 'CPU', 'leaf_estimation_iterations': 1, 'bootstrap_type': 'MVS', 'max_leaves': 64}
2021-01-11 02:28:05,958:INFO:Initializing predict_model()
2021-01-11 02:28:05,958:INFO:predict_model(display=None, ml_usecase=None, verbose=False, round=4, encoded_labels=False, probability_threshold=None, estimator=PowerTransformedTargetRegressor(border_count=254, loss_function='RMSE',
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=<catboost.core.CatBoostRegressor object at 0x7f2e30549588>,
                                task_type='CPU', verbose=False))
2021-01-11 02:28:05,958:INFO:Checking exceptions
2021-01-11 02:28:05,958:INFO:Preloading libraries
2021-01-11 02:28:06,425:INFO:Uploading results into container
2021-01-11 02:28:06,426:INFO:Uploading model into container now
2021-01-11 02:28:06,447:INFO:create_model_container: 26
2021-01-11 02:28:06,447:INFO:master_model_container: 26
2021-01-11 02:28:06,447:INFO:display_container: 10
2021-01-11 02:28:06,448:INFO:PowerTransformedTargetRegressor(border_count=254, loss_function='RMSE',
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=<catboost.core.CatBoostRegressor object at 0x7f2e30549588>,
                                task_type='CPU', verbose=False)
2021-01-11 02:28:06,448:INFO:create_model() succesfully completed......................................
2021-01-11 02:31:40,315:INFO:Initializing tune_model()
2021-01-11 02:31:40,318:INFO:tune_model(kwargs={}, display=None, tuner_verbose=True, verbose=True, return_tuner=False, groups=None, fit_kwargs=None, choose_better=False, early_stopping_max_iters=10, early_stopping=False, search_algorithm=None, search_library=scikit-learn, custom_scorer=None, optimize=R2, custom_grid=None, n_iter=10, round=4, fold=None, estimator=PowerTransformedTargetRegressor(border_count=254, loss_function='RMSE',
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=<catboost.core.CatBoostRegressor object at 0x7f2e30549588>,
                                task_type='CPU', verbose=False))
2021-01-11 02:31:40,318:INFO:Checking exceptions
2021-01-11 02:31:40,319:INFO:Preparing display monitor
2021-01-11 02:31:40,371:INFO:Copying training dataset
2021-01-11 02:31:40,375:INFO:Checking base model
2021-01-11 02:31:40,376:INFO:Base model : CatBoost Regressor
2021-01-11 02:31:40,407:INFO:Declaring metric variables
2021-01-11 02:31:40,428:INFO:Defining Hyperparameters
2021-01-11 02:31:40,590:INFO:Tuning with n_jobs=-1
2021-01-11 02:31:40,590:INFO:Initializing RandomizedSearchCV
2021-01-11 02:32:00,627:INFO:best_params: {'actual_estimator__random_strength': 0.0, 'actual_estimator__n_estimators': 250, 'actual_estimator__l2_leaf_reg': 20, 'actual_estimator__depth': 6}
2021-01-11 02:32:00,628:INFO:Random search completed
2021-01-11 02:32:00,628:INFO:SubProcess create_model() called ==================================
2021-01-11 02:32:00,629:INFO:Initializing create_model()
2021-01-11 02:32:00,629:INFO:create_model(kwargs={'random_strength': 0.0, 'n_estimators': 250, 'l2_leaf_reg': 20, 'depth': 6}, display=<pycaret.internal.Display.Display object at 0x7f2e08fdcf98>, metrics=None, system=False, verbose=True, refit=True, groups=None, fit_kwargs={}, predict=True, cross_validation=True, round=4, fold=KFold(n_splits=10, random_state=123, shuffle=False), estimator=PowerTransformedTargetRegressor(border_count=254, loss_function='RMSE',
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=<catboost.core.CatBoostRegressor object at 0x7f2e067f8cc0>,
                                task_type='CPU', verbose=False))
2021-01-11 02:32:00,629:INFO:Checking exceptions
2021-01-11 02:32:00,629:INFO:Importing libraries
2021-01-11 02:32:00,629:INFO:Copying training dataset
2021-01-11 02:32:00,631:INFO:Defining folds
2021-01-11 02:32:00,631:INFO:Declaring metric variables
2021-01-11 02:32:00,656:INFO:Importing untrained model
2021-01-11 02:32:00,656:INFO:Declaring custom model
2021-01-11 02:32:00,677:INFO:CatBoost Regressor Imported succesfully
2021-01-11 02:32:00,719:INFO:Starting cross validation
2021-01-11 02:32:00,720:INFO:Cross validating with KFold(n_splits=10, random_state=123, shuffle=False), n_jobs=-1
2021-01-11 02:32:03,901:INFO:Calculating mean and std
2021-01-11 02:32:03,902:INFO:Creating metrics dataframe
2021-01-11 02:32:03,940:INFO:Finalizing model
2021-01-11 02:32:04,282:INFO:Uploading results into container
2021-01-11 02:32:04,282:INFO:Uploading model into container now
2021-01-11 02:32:04,282:INFO:create_model_container: 27
2021-01-11 02:32:04,282:INFO:master_model_container: 27
2021-01-11 02:32:04,282:INFO:display_container: 11
2021-01-11 02:32:04,283:INFO:PowerTransformedTargetRegressor(border_count=254, depth=6, l2_leaf_reg=20,
                                loss_function='RMSE', n_estimators=250,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123, random_strength=0.0,
                                regressor=<catboost.core.CatBoostRegressor object at 0x7f2e06794c88>,
                                task_type='CPU', verbose=False)
2021-01-11 02:32:04,283:INFO:create_model() succesfully completed......................................
2021-01-11 02:32:04,440:INFO:SubProcess create_model() end ==================================
2021-01-11 02:32:04,440:INFO:Creating MLFlow logs
2021-01-11 02:32:04,461:INFO:Model: CatBoost Regressor
2021-01-11 02:32:04,480:INFO:logged params: {'nan_mode': 'Min', 'eval_metric': 'RMSE', 'iterations': 250, 'sampling_frequency': 'PerTree', 'leaf_estimation_method': 'Newton', 'grow_policy': 'SymmetricTree', 'penalties_coefficient': 1, 'boosting_type': 'Plain', 'model_shrink_mode': 'Constant', 'feature_border_type': 'GreedyLogSum', 'bayesian_matrix_reg': 0.10000000149011612, 'l2_leaf_reg': 20, 'random_strength': 0, 'rsm': 1, 'boost_from_average': True, 'model_size_reg': 0.5, 'subsample': 0.800000011920929, 'use_best_model': False, 'random_seed': 123, 'depth': 6, 'posterior_sampling': False, 'border_count': 254, 'classes_count': 0, 'auto_class_weights': 'None', 'sparse_features_conflict_fraction': 0, 'leaf_estimation_backtracking': 'AnyImprovement', 'best_model_min_trees': 1, 'model_shrink_rate': 0, 'min_data_in_leaf': 1, 'loss_function': 'RMSE', 'learning_rate': 0.029999999329447743, 'score_function': 'Cosine', 'task_type': 'CPU', 'leaf_estimation_iterations': 1, 'bootstrap_type': 'MVS', 'max_leaves': 64}
2021-01-11 02:32:04,514:INFO:Initializing predict_model()
2021-01-11 02:32:04,514:INFO:predict_model(display=None, ml_usecase=None, verbose=False, round=4, encoded_labels=False, probability_threshold=None, estimator=PowerTransformedTargetRegressor(border_count=254, depth=6, l2_leaf_reg=20,
                                loss_function='RMSE', n_estimators=250,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123, random_strength=0.0,
                                regressor=<catboost.core.CatBoostRegressor object at 0x7f2e06794c88>,
                                task_type='CPU', verbose=False))
2021-01-11 02:32:04,514:INFO:Checking exceptions
2021-01-11 02:32:04,514:INFO:Preloading libraries
2021-01-11 02:32:04,982:INFO:create_model_container: 27
2021-01-11 02:32:04,982:INFO:master_model_container: 27
2021-01-11 02:32:04,983:INFO:display_container: 11
2021-01-11 02:32:04,983:INFO:PowerTransformedTargetRegressor(border_count=254, depth=6, l2_leaf_reg=20,
                                loss_function='RMSE', n_estimators=250,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123, random_strength=0.0,
                                regressor=<catboost.core.CatBoostRegressor object at 0x7f2e06794c88>,
                                task_type='CPU', verbose=False)
2021-01-11 02:32:04,983:INFO:tune_model() succesfully completed......................................
2021-01-11 02:32:20,358:INFO:Initializing tune_model()
2021-01-11 02:32:20,358:INFO:tune_model(kwargs={}, display=None, tuner_verbose=True, verbose=True, return_tuner=False, groups=None, fit_kwargs=None, choose_better=False, early_stopping_max_iters=10, early_stopping=False, search_algorithm=None, search_library=scikit-learn, custom_scorer=None, optimize=R2, custom_grid=None, n_iter=50, round=4, fold=None, estimator=PowerTransformedTargetRegressor(border_count=254, loss_function='RMSE',
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=<catboost.core.CatBoostRegressor object at 0x7f2e30549588>,
                                task_type='CPU', verbose=False))
2021-01-11 02:32:20,358:INFO:Checking exceptions
2021-01-11 02:32:20,358:INFO:Preparing display monitor
2021-01-11 02:32:20,397:INFO:Copying training dataset
2021-01-11 02:32:20,399:INFO:Checking base model
2021-01-11 02:32:20,400:INFO:Base model : CatBoost Regressor
2021-01-11 02:32:20,423:INFO:Declaring metric variables
2021-01-11 02:32:20,446:INFO:Defining Hyperparameters
2021-01-11 02:32:20,608:INFO:Tuning with n_jobs=-1
2021-01-11 02:32:20,608:INFO:Initializing RandomizedSearchCV
2021-01-11 02:32:52,018:INFO:Initializing tune_model()
2021-01-11 02:32:52,018:INFO:tune_model(kwargs={}, display=None, tuner_verbose=True, verbose=True, return_tuner=False, groups=None, fit_kwargs=None, choose_better=False, early_stopping_max_iters=10, early_stopping=False, search_algorithm=None, search_library=scikit-learn, custom_scorer=None, optimize=R2, custom_grid=None, n_iter=10, round=3, fold=None, estimator=PowerTransformedTargetRegressor(border_count=254, loss_function='RMSE',
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=<catboost.core.CatBoostRegressor object at 0x7f2e30549588>,
                                task_type='CPU', verbose=False))
2021-01-11 02:32:52,018:INFO:Checking exceptions
2021-01-11 02:32:52,019:INFO:Preparing display monitor
2021-01-11 02:32:52,061:INFO:Copying training dataset
2021-01-11 02:32:52,063:INFO:Checking base model
2021-01-11 02:32:52,064:INFO:Base model : CatBoost Regressor
2021-01-11 02:32:52,087:INFO:Declaring metric variables
2021-01-11 02:32:52,109:INFO:Defining Hyperparameters
2021-01-11 02:32:52,268:INFO:Tuning with n_jobs=-1
2021-01-11 02:32:52,269:INFO:Initializing RandomizedSearchCV
2021-01-11 02:33:15,047:INFO:best_params: {'actual_estimator__random_strength': 0.0, 'actual_estimator__n_estimators': 250, 'actual_estimator__l2_leaf_reg': 20, 'actual_estimator__depth': 6}
2021-01-11 02:33:15,048:INFO:Random search completed
2021-01-11 02:33:15,049:INFO:SubProcess create_model() called ==================================
2021-01-11 02:33:15,049:INFO:Initializing create_model()
2021-01-11 02:33:15,049:INFO:create_model(kwargs={'random_strength': 0.0, 'n_estimators': 250, 'l2_leaf_reg': 20, 'depth': 6}, display=<pycaret.internal.Display.Display object at 0x7f2e3ea94400>, metrics=None, system=False, verbose=True, refit=True, groups=None, fit_kwargs={}, predict=True, cross_validation=True, round=3, fold=KFold(n_splits=10, random_state=123, shuffle=False), estimator=PowerTransformedTargetRegressor(border_count=254, loss_function='RMSE',
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=<catboost.core.CatBoostRegressor object at 0x7f2e0677e390>,
                                task_type='CPU', verbose=False))
2021-01-11 02:33:15,049:INFO:Checking exceptions
2021-01-11 02:33:15,050:INFO:Importing libraries
2021-01-11 02:33:15,050:INFO:Copying training dataset
2021-01-11 02:33:15,052:INFO:Defining folds
2021-01-11 02:33:15,052:INFO:Declaring metric variables
2021-01-11 02:33:15,078:INFO:Importing untrained model
2021-01-11 02:33:15,079:INFO:Declaring custom model
2021-01-11 02:33:15,098:INFO:CatBoost Regressor Imported succesfully
2021-01-11 02:33:15,140:INFO:Starting cross validation
2021-01-11 02:33:15,141:INFO:Cross validating with KFold(n_splits=10, random_state=123, shuffle=False), n_jobs=-1
2021-01-11 02:33:18,378:INFO:Calculating mean and std
2021-01-11 02:33:18,380:INFO:Creating metrics dataframe
2021-01-11 02:33:18,412:INFO:Finalizing model
2021-01-11 02:33:18,772:INFO:Uploading results into container
2021-01-11 02:33:18,773:INFO:Uploading model into container now
2021-01-11 02:33:18,773:INFO:create_model_container: 28
2021-01-11 02:33:18,773:INFO:master_model_container: 28
2021-01-11 02:33:18,773:INFO:display_container: 12
2021-01-11 02:33:18,774:INFO:PowerTransformedTargetRegressor(border_count=254, depth=6, l2_leaf_reg=20,
                                loss_function='RMSE', n_estimators=250,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123, random_strength=0.0,
                                regressor=<catboost.core.CatBoostRegressor object at 0x7f2e067b4978>,
                                task_type='CPU', verbose=False)
2021-01-11 02:33:18,774:INFO:create_model() succesfully completed......................................
2021-01-11 02:33:18,948:INFO:SubProcess create_model() end ==================================
2021-01-11 02:33:18,950:INFO:Creating MLFlow logs
2021-01-11 02:33:18,979:INFO:Model: CatBoost Regressor
2021-01-11 02:33:19,003:INFO:logged params: {'nan_mode': 'Min', 'eval_metric': 'RMSE', 'iterations': 250, 'sampling_frequency': 'PerTree', 'leaf_estimation_method': 'Newton', 'grow_policy': 'SymmetricTree', 'penalties_coefficient': 1, 'boosting_type': 'Plain', 'model_shrink_mode': 'Constant', 'feature_border_type': 'GreedyLogSum', 'bayesian_matrix_reg': 0.10000000149011612, 'l2_leaf_reg': 20, 'random_strength': 0, 'rsm': 1, 'boost_from_average': True, 'model_size_reg': 0.5, 'subsample': 0.800000011920929, 'use_best_model': False, 'random_seed': 123, 'depth': 6, 'posterior_sampling': False, 'border_count': 254, 'classes_count': 0, 'auto_class_weights': 'None', 'sparse_features_conflict_fraction': 0, 'leaf_estimation_backtracking': 'AnyImprovement', 'best_model_min_trees': 1, 'model_shrink_rate': 0, 'min_data_in_leaf': 1, 'loss_function': 'RMSE', 'learning_rate': 0.029999999329447743, 'score_function': 'Cosine', 'task_type': 'CPU', 'leaf_estimation_iterations': 1, 'bootstrap_type': 'MVS', 'max_leaves': 64}
2021-01-11 02:33:19,047:INFO:Initializing predict_model()
2021-01-11 02:33:19,047:INFO:predict_model(display=None, ml_usecase=None, verbose=False, round=4, encoded_labels=False, probability_threshold=None, estimator=PowerTransformedTargetRegressor(border_count=254, depth=6, l2_leaf_reg=20,
                                loss_function='RMSE', n_estimators=250,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123, random_strength=0.0,
                                regressor=<catboost.core.CatBoostRegressor object at 0x7f2e067b4978>,
                                task_type='CPU', verbose=False))
2021-01-11 02:33:19,047:INFO:Checking exceptions
2021-01-11 02:33:19,047:INFO:Preloading libraries
2021-01-11 02:33:19,525:INFO:create_model_container: 28
2021-01-11 02:33:19,525:INFO:master_model_container: 28
2021-01-11 02:33:19,525:INFO:display_container: 12
2021-01-11 02:33:19,526:INFO:PowerTransformedTargetRegressor(border_count=254, depth=6, l2_leaf_reg=20,
                                loss_function='RMSE', n_estimators=250,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123, random_strength=0.0,
                                regressor=<catboost.core.CatBoostRegressor object at 0x7f2e067b4978>,
                                task_type='CPU', verbose=False)
2021-01-11 02:33:19,526:INFO:tune_model() succesfully completed......................................
2021-01-11 02:33:19,692:INFO:Initializing tune_model()
2021-01-11 02:33:19,692:INFO:tune_model(kwargs={}, display=None, tuner_verbose=True, verbose=True, return_tuner=False, groups=None, fit_kwargs=None, choose_better=False, early_stopping_max_iters=10, early_stopping=False, search_algorithm=None, search_library=scikit-learn, custom_scorer=None, optimize=R2, custom_grid=None, n_iter=50, round=3, fold=None, estimator=PowerTransformedTargetRegressor(border_count=254, loss_function='RMSE',
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=<catboost.core.CatBoostRegressor object at 0x7f2e30549588>,
                                task_type='CPU', verbose=False))
2021-01-11 02:33:19,692:INFO:Checking exceptions
2021-01-11 02:33:19,693:INFO:Preparing display monitor
2021-01-11 02:33:19,734:INFO:Copying training dataset
2021-01-11 02:33:19,736:INFO:Checking base model
2021-01-11 02:33:19,737:INFO:Base model : CatBoost Regressor
2021-01-11 02:33:19,758:INFO:Declaring metric variables
2021-01-11 02:33:19,780:INFO:Defining Hyperparameters
2021-01-11 02:33:19,936:INFO:Tuning with n_jobs=-1
2021-01-11 02:33:19,936:INFO:Initializing RandomizedSearchCV
2021-01-11 02:34:55,931:INFO:best_params: {'actual_estimator__random_strength': 0.5, 'actual_estimator__n_estimators': 260, 'actual_estimator__l2_leaf_reg': 5, 'actual_estimator__depth': 9}
2021-01-11 02:34:55,932:INFO:Random search completed
2021-01-11 02:34:55,932:INFO:SubProcess create_model() called ==================================
2021-01-11 02:34:55,933:INFO:Initializing create_model()
2021-01-11 02:34:55,933:INFO:create_model(kwargs={'random_strength': 0.5, 'n_estimators': 260, 'l2_leaf_reg': 5, 'depth': 9}, display=<pycaret.internal.Display.Display object at 0x7f2e0677e438>, metrics=None, system=False, verbose=True, refit=True, groups=None, fit_kwargs={}, predict=True, cross_validation=True, round=3, fold=KFold(n_splits=10, random_state=123, shuffle=False), estimator=PowerTransformedTargetRegressor(border_count=254, loss_function='RMSE',
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=<catboost.core.CatBoostRegressor object at 0x7f2e067b4b00>,
                                task_type='CPU', verbose=False))
2021-01-11 02:34:55,933:INFO:Checking exceptions
2021-01-11 02:34:55,933:INFO:Importing libraries
2021-01-11 02:34:55,933:INFO:Copying training dataset
2021-01-11 02:34:55,939:INFO:Defining folds
2021-01-11 02:34:55,939:INFO:Declaring metric variables
2021-01-11 02:34:55,967:INFO:Importing untrained model
2021-01-11 02:34:55,967:INFO:Declaring custom model
2021-01-11 02:34:55,987:INFO:CatBoost Regressor Imported succesfully
2021-01-11 02:34:56,029:INFO:Starting cross validation
2021-01-11 02:34:56,030:INFO:Cross validating with KFold(n_splits=10, random_state=123, shuffle=False), n_jobs=-1
2021-01-11 02:35:01,577:INFO:Calculating mean and std
2021-01-11 02:35:01,578:INFO:Creating metrics dataframe
2021-01-11 02:35:01,609:INFO:Finalizing model
2021-01-11 02:35:02,200:INFO:Uploading results into container
2021-01-11 02:35:02,201:INFO:Uploading model into container now
2021-01-11 02:35:02,201:INFO:create_model_container: 29
2021-01-11 02:35:02,201:INFO:master_model_container: 29
2021-01-11 02:35:02,201:INFO:display_container: 13
2021-01-11 02:35:02,201:INFO:PowerTransformedTargetRegressor(border_count=254, depth=9, l2_leaf_reg=5,
                                loss_function='RMSE', n_estimators=260,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123, random_strength=0.5,
                                regressor=<catboost.core.CatBoostRegressor object at 0x7f2e06794898>,
                                task_type='CPU', verbose=False)
2021-01-11 02:35:02,201:INFO:create_model() succesfully completed......................................
2021-01-11 02:35:02,365:INFO:SubProcess create_model() end ==================================
2021-01-11 02:35:02,366:INFO:Creating MLFlow logs
2021-01-11 02:35:02,387:INFO:Model: CatBoost Regressor
2021-01-11 02:35:02,406:INFO:logged params: {'nan_mode': 'Min', 'eval_metric': 'RMSE', 'iterations': 260, 'sampling_frequency': 'PerTree', 'leaf_estimation_method': 'Newton', 'grow_policy': 'SymmetricTree', 'penalties_coefficient': 1, 'boosting_type': 'Plain', 'model_shrink_mode': 'Constant', 'feature_border_type': 'GreedyLogSum', 'bayesian_matrix_reg': 0.10000000149011612, 'l2_leaf_reg': 5, 'random_strength': 0.5, 'rsm': 1, 'boost_from_average': True, 'model_size_reg': 0.5, 'subsample': 0.800000011920929, 'use_best_model': False, 'random_seed': 123, 'depth': 9, 'posterior_sampling': False, 'border_count': 254, 'classes_count': 0, 'auto_class_weights': 'None', 'sparse_features_conflict_fraction': 0, 'leaf_estimation_backtracking': 'AnyImprovement', 'best_model_min_trees': 1, 'model_shrink_rate': 0, 'min_data_in_leaf': 1, 'loss_function': 'RMSE', 'learning_rate': 0.029999999329447743, 'score_function': 'Cosine', 'task_type': 'CPU', 'leaf_estimation_iterations': 1, 'bootstrap_type': 'MVS', 'max_leaves': 512}
2021-01-11 02:35:02,440:INFO:Initializing predict_model()
2021-01-11 02:35:02,440:INFO:predict_model(display=None, ml_usecase=None, verbose=False, round=4, encoded_labels=False, probability_threshold=None, estimator=PowerTransformedTargetRegressor(border_count=254, depth=9, l2_leaf_reg=5,
                                loss_function='RMSE', n_estimators=260,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123, random_strength=0.5,
                                regressor=<catboost.core.CatBoostRegressor object at 0x7f2e06794898>,
                                task_type='CPU', verbose=False))
2021-01-11 02:35:02,440:INFO:Checking exceptions
2021-01-11 02:35:02,440:INFO:Preloading libraries
2021-01-11 02:35:02,919:INFO:create_model_container: 29
2021-01-11 02:35:02,919:INFO:master_model_container: 29
2021-01-11 02:35:02,919:INFO:display_container: 13
2021-01-11 02:35:02,919:INFO:PowerTransformedTargetRegressor(border_count=254, depth=9, l2_leaf_reg=5,
                                loss_function='RMSE', n_estimators=260,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123, random_strength=0.5,
                                regressor=<catboost.core.CatBoostRegressor object at 0x7f2e06794898>,
                                task_type='CPU', verbose=False)
2021-01-11 02:35:02,919:INFO:tune_model() succesfully completed......................................
2021-01-11 02:36:05,728:INFO:Initializing plot_model()
2021-01-11 02:36:05,728:INFO:plot_model(verbose=True, use_train_data=False, fold=None, plot=parameter, system=True, scale=1, save=False, label=False, groups=None, fit_kwargs=None, feature_name=None, estimator=PowerTransformedTargetRegressor(border_count=254, depth=6, l2_leaf_reg=20,
                                loss_function='RMSE', n_estimators=250,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123, random_strength=0.0,
                                regressor=<catboost.core.CatBoostRegressor object at 0x7f2e067b4978>,
                                task_type='CPU', verbose=False), display=None)
2021-01-11 02:36:05,729:INFO:Checking exceptions
2021-01-11 02:36:05,729:INFO:Preparing display monitor
2021-01-11 02:36:05,747:INFO:Preloading libraries
2021-01-11 02:36:05,752:INFO:Copying training dataset
2021-01-11 02:36:05,762:INFO:Copying test dataset
2021-01-11 02:36:05,763:INFO:Plot type: parameter
2021-01-11 02:36:05,779:INFO:Visual Rendered Successfully
2021-01-11 02:36:05,936:INFO:plot_model() succesfully completed......................................
2021-01-11 02:36:08,322:INFO:Initializing plot_model()
2021-01-11 02:36:08,322:INFO:plot_model(verbose=True, use_train_data=False, fold=None, plot=parameter, system=True, scale=1, save=False, label=False, groups=None, fit_kwargs=None, feature_name=None, estimator=PowerTransformedTargetRegressor(border_count=254, depth=9, l2_leaf_reg=5,
                                loss_function='RMSE', n_estimators=260,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123, random_strength=0.5,
                                regressor=<catboost.core.CatBoostRegressor object at 0x7f2e06794898>,
                                task_type='CPU', verbose=False), display=None)
2021-01-11 02:36:08,322:INFO:Checking exceptions
2021-01-11 02:36:08,322:INFO:Preparing display monitor
2021-01-11 02:36:08,341:INFO:Preloading libraries
2021-01-11 02:36:08,349:INFO:Copying training dataset
2021-01-11 02:36:08,350:INFO:Copying test dataset
2021-01-11 02:36:08,351:INFO:Plot type: parameter
2021-01-11 02:36:08,366:INFO:Visual Rendered Successfully
2021-01-11 02:36:08,518:INFO:plot_model() succesfully completed......................................
2021-01-11 02:36:50,368:INFO:Initializing plot_model()
2021-01-11 02:36:50,369:INFO:plot_model(verbose=True, use_train_data=False, fold=None, plot=residuals, system=True, scale=1, save=False, label=False, groups=None, fit_kwargs=None, feature_name=None, estimator=PowerTransformedTargetRegressor(border_count=254, depth=9, l2_leaf_reg=5,
                                loss_function='RMSE', n_estimators=260,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123, random_strength=0.5,
                                regressor=<catboost.core.CatBoostRegressor object at 0x7f2e06794898>,
                                task_type='CPU', verbose=False), display=None)
2021-01-11 02:36:50,369:INFO:Checking exceptions
2021-01-11 02:36:50,370:INFO:Preparing display monitor
2021-01-11 02:36:50,391:INFO:Preloading libraries
2021-01-11 02:36:50,399:INFO:Copying training dataset
2021-01-11 02:36:50,400:INFO:Copying test dataset
2021-01-11 02:36:50,401:INFO:Plot type: residuals
2021-01-11 02:36:50,454:INFO:Fitting Model
2021-01-11 02:36:50,503:INFO:Scoring test/hold-out set
2021-01-11 02:36:51,232:INFO:Visual Rendered Successfully
2021-01-11 02:36:51,402:INFO:plot_model() succesfully completed......................................
2021-01-11 02:38:17,464:INFO:Initializing plot_model()
2021-01-11 02:38:17,464:INFO:plot_model(verbose=True, use_train_data=False, fold=None, plot=error, system=True, scale=1, save=False, label=False, groups=None, fit_kwargs=None, feature_name=None, estimator=PowerTransformedTargetRegressor(border_count=254, depth=9, l2_leaf_reg=5,
                                loss_function='RMSE', n_estimators=260,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123, random_strength=0.5,
                                regressor=<catboost.core.CatBoostRegressor object at 0x7f2e06794898>,
                                task_type='CPU', verbose=False), display=None)
2021-01-11 02:38:17,464:INFO:Checking exceptions
2021-01-11 02:38:17,464:INFO:Preparing display monitor
2021-01-11 02:38:17,482:INFO:Preloading libraries
2021-01-11 02:38:17,491:INFO:Copying training dataset
2021-01-11 02:38:17,492:INFO:Copying test dataset
2021-01-11 02:38:17,493:INFO:Plot type: error
2021-01-11 02:38:17,498:INFO:Fitting Model
2021-01-11 02:38:17,503:INFO:Scoring test/hold-out set
2021-01-11 02:38:17,775:INFO:Visual Rendered Successfully
2021-01-11 02:38:17,952:INFO:plot_model() succesfully completed......................................
2021-01-11 02:39:19,516:INFO:Initializing plot_model()
2021-01-11 02:39:19,518:INFO:plot_model(verbose=True, use_train_data=False, fold=None, plot=feature, system=True, scale=1, save=False, label=False, groups=None, fit_kwargs=None, feature_name=None, estimator=PowerTransformedTargetRegressor(border_count=254, depth=9, l2_leaf_reg=5,
                                loss_function='RMSE', n_estimators=260,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123, random_strength=0.5,
                                regressor=<catboost.core.CatBoostRegressor object at 0x7f2e06794898>,
                                task_type='CPU', verbose=False), display=None)
2021-01-11 02:39:19,518:INFO:Checking exceptions
2021-01-11 02:39:19,518:INFO:Preparing display monitor
2021-01-11 02:39:19,540:INFO:Preloading libraries
2021-01-11 02:39:19,545:INFO:Copying training dataset
2021-01-11 02:39:19,547:INFO:Copying test dataset
2021-01-11 02:39:19,547:INFO:Plot type: feature
2021-01-11 02:39:19,550:WARNING:No coef_ found. Trying feature_importances_
2021-01-11 02:39:19,751:INFO:Visual Rendered Successfully
2021-01-11 02:39:19,917:INFO:plot_model() succesfully completed......................................
2021-01-11 02:39:47,398:INFO:Initializing evaluate_model()
2021-01-11 02:39:47,398:INFO:evaluate_model(use_train_data=False, groups=None, feature_name=None, fit_kwargs=None, fold=None, estimator=PowerTransformedTargetRegressor(border_count=254, depth=9, l2_leaf_reg=5,
                                loss_function='RMSE', n_estimators=260,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123, random_strength=0.5,
                                regressor=<catboost.core.CatBoostRegressor object at 0x7f2e06794898>,
                                task_type='CPU', verbose=False))
2021-01-11 02:39:47,458:INFO:Initializing plot_model()
2021-01-11 02:39:47,459:INFO:plot_model(verbose=True, use_train_data=False, fold=KFold(n_splits=10, random_state=123, shuffle=False), plot=parameter, system=True, scale=1, save=False, label=False, groups=None, fit_kwargs={}, feature_name=None, estimator=PowerTransformedTargetRegressor(border_count=254, depth=9, l2_leaf_reg=5,
                                loss_function='RMSE', n_estimators=260,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123, random_strength=0.5,
                                regressor=<catboost.core.CatBoostRegressor object at 0x7f2e06794898>,
                                task_type='CPU', verbose=False), display=None)
2021-01-11 02:39:47,459:INFO:Checking exceptions
2021-01-11 02:39:47,459:INFO:Preparing display monitor
2021-01-11 02:39:47,475:INFO:Preloading libraries
2021-01-11 02:39:47,483:INFO:Copying training dataset
2021-01-11 02:39:47,484:INFO:Copying test dataset
2021-01-11 02:39:47,486:INFO:Plot type: parameter
2021-01-11 02:39:47,504:INFO:Visual Rendered Successfully
2021-01-11 02:39:47,673:INFO:plot_model() succesfully completed......................................
2021-01-11 02:40:06,948:INFO:Initializing plot_model()
2021-01-11 02:40:06,949:INFO:plot_model(verbose=True, use_train_data=False, fold=KFold(n_splits=10, random_state=123, shuffle=False), plot=error, system=True, scale=1, save=False, label=False, groups=None, fit_kwargs={}, feature_name=None, estimator=PowerTransformedTargetRegressor(border_count=254, depth=9, l2_leaf_reg=5,
                                loss_function='RMSE', n_estimators=260,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123, random_strength=0.5,
                                regressor=<catboost.core.CatBoostRegressor object at 0x7f2e06794898>,
                                task_type='CPU', verbose=False), display=None)
2021-01-11 02:40:06,949:INFO:Checking exceptions
2021-01-11 02:40:06,949:INFO:Preparing display monitor
2021-01-11 02:40:06,967:INFO:Preloading libraries
2021-01-11 02:40:06,971:INFO:Copying training dataset
2021-01-11 02:40:06,977:INFO:Copying test dataset
2021-01-11 02:40:06,977:INFO:Plot type: error
2021-01-11 02:40:06,988:INFO:Fitting Model
2021-01-11 02:40:07,002:INFO:Scoring test/hold-out set
2021-01-11 02:40:07,254:INFO:Visual Rendered Successfully
2021-01-11 02:40:07,422:INFO:plot_model() succesfully completed......................................
2021-01-11 02:40:17,516:INFO:Initializing plot_model()
2021-01-11 02:40:17,516:INFO:plot_model(verbose=True, use_train_data=False, fold=KFold(n_splits=10, random_state=123, shuffle=False), plot=parameter, system=True, scale=1, save=False, label=False, groups=None, fit_kwargs={}, feature_name=None, estimator=PowerTransformedTargetRegressor(border_count=254, depth=9, l2_leaf_reg=5,
                                loss_function='RMSE', n_estimators=260,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123, random_strength=0.5,
                                regressor=<catboost.core.CatBoostRegressor object at 0x7f2e06794898>,
                                task_type='CPU', verbose=False), display=None)
2021-01-11 02:40:17,517:INFO:Checking exceptions
2021-01-11 02:40:17,517:INFO:Preparing display monitor
2021-01-11 02:40:17,528:INFO:Preloading libraries
2021-01-11 02:40:17,534:INFO:Copying training dataset
2021-01-11 02:40:17,535:INFO:Copying test dataset
2021-01-11 02:40:17,535:INFO:Plot type: parameter
2021-01-11 02:40:17,552:INFO:Visual Rendered Successfully
2021-01-11 02:40:17,717:INFO:plot_model() succesfully completed......................................
2021-01-11 02:40:19,443:INFO:Initializing plot_model()
2021-01-11 02:40:19,444:INFO:plot_model(verbose=True, use_train_data=False, fold=KFold(n_splits=10, random_state=123, shuffle=False), plot=cooks, system=True, scale=1, save=False, label=False, groups=None, fit_kwargs={}, feature_name=None, estimator=PowerTransformedTargetRegressor(border_count=254, depth=9, l2_leaf_reg=5,
                                loss_function='RMSE', n_estimators=260,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123, random_strength=0.5,
                                regressor=<catboost.core.CatBoostRegressor object at 0x7f2e06794898>,
                                task_type='CPU', verbose=False), display=None)
2021-01-11 02:40:19,444:INFO:Checking exceptions
2021-01-11 02:40:19,446:INFO:Preparing display monitor
2021-01-11 02:40:19,465:INFO:Preloading libraries
2021-01-11 02:40:19,472:INFO:Copying training dataset
2021-01-11 02:40:19,473:INFO:Copying test dataset
2021-01-11 02:40:19,474:INFO:Plot type: cooks
2021-01-11 02:40:19,492:INFO:Fitting Model
2021-01-11 02:40:19,953:INFO:Visual Rendered Successfully
2021-01-11 02:40:20,127:INFO:plot_model() succesfully completed......................................
2021-01-11 02:40:21,230:INFO:Initializing plot_model()
2021-01-11 02:40:21,231:INFO:plot_model(verbose=True, use_train_data=False, fold=KFold(n_splits=10, random_state=123, shuffle=False), plot=manifold, system=True, scale=1, save=False, label=False, groups=None, fit_kwargs={}, feature_name=None, estimator=PowerTransformedTargetRegressor(border_count=254, depth=9, l2_leaf_reg=5,
                                loss_function='RMSE', n_estimators=260,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123, random_strength=0.5,
                                regressor=<catboost.core.CatBoostRegressor object at 0x7f2e06794898>,
                                task_type='CPU', verbose=False), display=None)
2021-01-11 02:40:21,231:INFO:Checking exceptions
2021-01-11 02:40:21,231:INFO:Preparing display monitor
2021-01-11 02:40:21,254:INFO:Preloading libraries
2021-01-11 02:40:21,264:INFO:Copying training dataset
2021-01-11 02:40:21,266:INFO:Copying test dataset
2021-01-11 02:40:21,268:INFO:Plot type: manifold
2021-01-11 02:40:21,297:INFO:Fitting & Transforming Model
2021-01-11 02:40:57,255:INFO:Visual Rendered Successfully
2021-01-11 02:40:57,457:INFO:plot_model() succesfully completed......................................
2021-01-11 02:40:58,754:INFO:Initializing plot_model()
2021-01-11 02:40:58,755:INFO:plot_model(verbose=True, use_train_data=False, fold=KFold(n_splits=10, random_state=123, shuffle=False), plot=error, system=True, scale=1, save=False, label=False, groups=None, fit_kwargs={}, feature_name=None, estimator=PowerTransformedTargetRegressor(border_count=254, depth=9, l2_leaf_reg=5,
                                loss_function='RMSE', n_estimators=260,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123, random_strength=0.5,
                                regressor=<catboost.core.CatBoostRegressor object at 0x7f2e06794898>,
                                task_type='CPU', verbose=False), display=None)
2021-01-11 02:40:58,755:INFO:Checking exceptions
2021-01-11 02:40:58,755:INFO:Preparing display monitor
2021-01-11 02:40:58,774:INFO:Preloading libraries
2021-01-11 02:40:58,781:INFO:Copying training dataset
2021-01-11 02:40:58,782:INFO:Copying test dataset
2021-01-11 02:40:58,783:INFO:Plot type: error
2021-01-11 02:40:58,787:INFO:Fitting Model
2021-01-11 02:40:58,793:INFO:Scoring test/hold-out set
2021-01-11 02:40:59,058:INFO:Visual Rendered Successfully
2021-01-11 02:40:59,223:INFO:plot_model() succesfully completed......................................
2021-01-11 02:41:03,034:INFO:Initializing plot_model()
2021-01-11 02:41:03,034:INFO:plot_model(verbose=True, use_train_data=False, fold=KFold(n_splits=10, random_state=123, shuffle=False), plot=cooks, system=True, scale=1, save=False, label=False, groups=None, fit_kwargs={}, feature_name=None, estimator=PowerTransformedTargetRegressor(border_count=254, depth=9, l2_leaf_reg=5,
                                loss_function='RMSE', n_estimators=260,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123, random_strength=0.5,
                                regressor=<catboost.core.CatBoostRegressor object at 0x7f2e06794898>,
                                task_type='CPU', verbose=False), display=None)
2021-01-11 02:41:03,034:INFO:Checking exceptions
2021-01-11 02:41:03,034:INFO:Preparing display monitor
2021-01-11 02:41:03,050:INFO:Preloading libraries
2021-01-11 02:41:03,054:INFO:Copying training dataset
2021-01-11 02:41:03,059:INFO:Copying test dataset
2021-01-11 02:41:03,060:INFO:Plot type: cooks
2021-01-11 02:41:03,082:INFO:Fitting Model
2021-01-11 02:41:03,503:INFO:Visual Rendered Successfully
2021-01-11 02:41:03,676:INFO:plot_model() succesfully completed......................................
2021-01-11 02:41:05,093:INFO:Initializing plot_model()
2021-01-11 02:41:05,093:INFO:plot_model(verbose=True, use_train_data=False, fold=KFold(n_splits=10, random_state=123, shuffle=False), plot=manifold, system=True, scale=1, save=False, label=False, groups=None, fit_kwargs={}, feature_name=None, estimator=PowerTransformedTargetRegressor(border_count=254, depth=9, l2_leaf_reg=5,
                                loss_function='RMSE', n_estimators=260,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123, random_strength=0.5,
                                regressor=<catboost.core.CatBoostRegressor object at 0x7f2e06794898>,
                                task_type='CPU', verbose=False), display=None)
2021-01-11 02:41:05,093:INFO:Checking exceptions
2021-01-11 02:41:05,093:INFO:Preparing display monitor
2021-01-11 02:41:05,111:INFO:Preloading libraries
2021-01-11 02:41:05,117:INFO:Copying training dataset
2021-01-11 02:41:05,119:INFO:Copying test dataset
2021-01-11 02:41:05,120:INFO:Plot type: manifold
2021-01-11 02:41:05,147:INFO:Fitting & Transforming Model
2021-01-11 02:41:40,866:INFO:Visual Rendered Successfully
2021-01-11 02:41:41,067:INFO:plot_model() succesfully completed......................................
2021-01-11 02:43:40,043:INFO:Initializing plot_model()
2021-01-11 02:43:40,044:INFO:plot_model(verbose=True, use_train_data=False, fold=KFold(n_splits=10, random_state=123, shuffle=False), plot=feature, system=True, scale=1, save=False, label=False, groups=None, fit_kwargs={}, feature_name=None, estimator=PowerTransformedTargetRegressor(border_count=254, depth=9, l2_leaf_reg=5,
                                loss_function='RMSE', n_estimators=260,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123, random_strength=0.5,
                                regressor=<catboost.core.CatBoostRegressor object at 0x7f2e06794898>,
                                task_type='CPU', verbose=False), display=None)
2021-01-11 02:43:40,044:INFO:Checking exceptions
2021-01-11 02:43:40,044:INFO:Preparing display monitor
2021-01-11 02:43:40,057:INFO:Preloading libraries
2021-01-11 02:43:40,064:INFO:Copying training dataset
2021-01-11 02:43:40,065:INFO:Copying test dataset
2021-01-11 02:43:40,066:INFO:Plot type: feature
2021-01-11 02:43:40,069:WARNING:No coef_ found. Trying feature_importances_
2021-01-11 02:43:40,260:INFO:Visual Rendered Successfully
2021-01-11 02:43:40,430:INFO:plot_model() succesfully completed......................................
2021-01-11 02:43:42,124:INFO:Initializing plot_model()
2021-01-11 02:43:42,124:INFO:plot_model(verbose=True, use_train_data=False, fold=KFold(n_splits=10, random_state=123, shuffle=False), plot=learning, system=True, scale=1, save=False, label=False, groups=None, fit_kwargs={}, feature_name=None, estimator=PowerTransformedTargetRegressor(border_count=254, depth=9, l2_leaf_reg=5,
                                loss_function='RMSE', n_estimators=260,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123, random_strength=0.5,
                                regressor=<catboost.core.CatBoostRegressor object at 0x7f2e06794898>,
                                task_type='CPU', verbose=False), display=None)
2021-01-11 02:43:42,124:INFO:Checking exceptions
2021-01-11 02:43:42,124:INFO:Preparing display monitor
2021-01-11 02:43:42,149:INFO:Preloading libraries
2021-01-11 02:43:42,158:INFO:Copying training dataset
2021-01-11 02:43:42,159:INFO:Copying test dataset
2021-01-11 02:43:42,160:INFO:Plot type: learning
2021-01-11 02:43:42,180:INFO:Fitting Model
2021-01-11 02:44:32,728:INFO:Visual Rendered Successfully
2021-01-11 02:44:32,912:INFO:plot_model() succesfully completed......................................
2021-01-11 02:48:28,879:INFO:Initializing predict_model()
2021-01-11 02:48:28,879:INFO:predict_model(display=None, ml_usecase=MLUsecase.REGRESSION, verbose=True, round=4, encoded_labels=True, probability_threshold=None, estimator=PowerTransformedTargetRegressor(border_count=254, depth=9, l2_leaf_reg=5,
                                loss_function='RMSE', n_estimators=260,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123, random_strength=0.5,
                                regressor=<catboost.core.CatBoostRegressor object at 0x7f2e06794898>,
                                task_type='CPU', verbose=False))
2021-01-11 02:48:28,880:INFO:Checking exceptions
2021-01-11 02:48:28,880:INFO:Preloading libraries
2021-01-11 02:48:28,880:INFO:Preparing display monitor
2021-01-11 02:48:41,747:INFO:Initializing predict_model()
2021-01-11 02:48:41,747:INFO:predict_model(display=None, ml_usecase=MLUsecase.REGRESSION, verbose=True, round=3, encoded_labels=True, probability_threshold=None, estimator=PowerTransformedTargetRegressor(border_count=254, depth=9, l2_leaf_reg=5,
                                loss_function='RMSE', n_estimators=260,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123, random_strength=0.5,
                                regressor=<catboost.core.CatBoostRegressor object at 0x7f2e06794898>,
                                task_type='CPU', verbose=False))
2021-01-11 02:48:41,747:INFO:Checking exceptions
2021-01-11 02:48:41,747:INFO:Preloading libraries
2021-01-11 02:48:41,747:INFO:Preparing display monitor
2021-01-11 02:58:27,982:INFO:Initializing tune_model()
2021-01-11 02:58:27,982:INFO:tune_model(kwargs={}, display=None, tuner_verbose=True, verbose=True, return_tuner=False, groups=None, fit_kwargs=None, choose_better=False, early_stopping_max_iters=10, early_stopping=False, search_algorithm=None, search_library=scikit-learn, custom_scorer=None, optimize=R2, custom_grid={'num_leaves': array([ 10,  20,  30,  40,  50,  60,  70,  80,  90, 100, 110, 120, 130,
       140, 150, 160, 170, 180, 190]), 'max_depth': [10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 110], 'learning_rate': array([0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9])}, n_iter=10, round=4, fold=None, estimator=PowerTransformedTargetRegressor(border_count=254, loss_function='RMSE',
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=<catboost.core.CatBoostRegressor object at 0x7f2e30549588>,
                                task_type='CPU', verbose=False))
2021-01-11 02:58:27,982:INFO:Checking exceptions
2021-01-11 02:58:27,983:INFO:Preparing display monitor
2021-01-11 02:58:28,030:INFO:Copying training dataset
2021-01-11 02:58:28,032:INFO:Checking base model
2021-01-11 02:58:28,033:INFO:Base model : CatBoost Regressor
2021-01-11 02:58:28,056:INFO:Declaring metric variables
2021-01-11 02:58:28,079:INFO:Defining Hyperparameters
2021-01-11 02:58:28,240:INFO:custom_grid: {'actual_estimator__num_leaves': array([ 10,  20,  30,  40,  50,  60,  70,  80,  90, 100, 110, 120, 130,
       140, 150, 160, 170, 180, 190]), 'actual_estimator__max_depth': [10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 110], 'actual_estimator__learning_rate': array([0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9])}
2021-01-11 02:58:28,240:INFO:Tuning with n_jobs=-1
2021-01-11 02:58:28,240:INFO:Initializing RandomizedSearchCV
2021-01-11 02:58:32,616:INFO:best_params: {'actual_estimator__num_leaves': 20, 'actual_estimator__max_depth': 50, 'actual_estimator__learning_rate': 0.6}
2021-01-11 02:58:32,617:INFO:Random search completed
2021-01-11 02:58:32,618:INFO:SubProcess create_model() called ==================================
2021-01-11 02:58:32,618:INFO:Initializing create_model()
2021-01-11 02:58:32,618:INFO:create_model(kwargs={'num_leaves': 20, 'max_depth': 50, 'learning_rate': 0.6}, display=<pycaret.internal.Display.Display object at 0x7f2e085030b8>, metrics=None, system=False, verbose=True, refit=True, groups=None, fit_kwargs={}, predict=True, cross_validation=True, round=4, fold=KFold(n_splits=10, random_state=123, shuffle=False), estimator=PowerTransformedTargetRegressor(border_count=254, loss_function='RMSE',
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=<catboost.core.CatBoostRegressor object at 0x7f2e08503630>,
                                task_type='CPU', verbose=False))
2021-01-11 02:58:32,618:INFO:Checking exceptions
2021-01-11 02:58:32,618:INFO:Importing libraries
2021-01-11 02:58:32,619:INFO:Copying training dataset
2021-01-11 02:58:32,620:INFO:Defining folds
2021-01-11 02:58:32,620:INFO:Declaring metric variables
2021-01-11 02:58:32,646:INFO:Importing untrained model
2021-01-11 02:58:32,646:INFO:Declaring custom model
2021-01-11 02:58:32,665:INFO:CatBoost Regressor Imported succesfully
2021-01-11 02:58:32,703:INFO:Starting cross validation
2021-01-11 02:58:32,704:INFO:Cross validating with KFold(n_splits=10, random_state=123, shuffle=False), n_jobs=-1
2021-01-11 02:58:32,971:INFO:Calculating mean and std
2021-01-11 02:58:32,973:INFO:Creating metrics dataframe
2021-01-11 02:58:33,003:INFO:Finalizing model
2021-01-11 02:59:02,127:INFO:Initializing tune_model()
2021-01-11 02:59:02,127:INFO:tune_model(kwargs={}, display=None, tuner_verbose=True, verbose=True, return_tuner=False, groups=None, fit_kwargs=None, choose_better=False, early_stopping_max_iters=10, early_stopping=False, search_algorithm=None, search_library=scikit-learn, custom_scorer=None, optimize=R2, custom_grid={'num_leaves': array([ 10,  20,  30,  40,  50,  60,  70,  80,  90, 100, 110, 120, 130,
       140, 150, 160, 170, 180, 190]), 'max_depth': [10, 16, 23, 30, 36, 43, 50, 56, 63, 70, 76, 83, 90, 96, 103, 110], 'learning_rate': array([0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9])}, n_iter=10, round=4, fold=None, estimator=PowerTransformedTargetRegressor(border_count=254, loss_function='RMSE',
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=<catboost.core.CatBoostRegressor object at 0x7f2e30549588>,
                                task_type='CPU', verbose=False))
2021-01-11 02:59:02,128:INFO:Checking exceptions
2021-01-11 02:59:02,129:INFO:Preparing display monitor
2021-01-11 02:59:02,169:INFO:Copying training dataset
2021-01-11 02:59:02,171:INFO:Checking base model
2021-01-11 02:59:02,171:INFO:Base model : CatBoost Regressor
2021-01-11 02:59:02,192:INFO:Declaring metric variables
2021-01-11 02:59:02,213:INFO:Defining Hyperparameters
2021-01-11 02:59:02,382:INFO:custom_grid: {'actual_estimator__num_leaves': array([ 10,  20,  30,  40,  50,  60,  70,  80,  90, 100, 110, 120, 130,
       140, 150, 160, 170, 180, 190]), 'actual_estimator__max_depth': [10, 16, 23, 30, 36, 43, 50, 56, 63, 70, 76, 83, 90, 96, 103, 110], 'actual_estimator__learning_rate': array([0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9])}
2021-01-11 02:59:02,382:INFO:Tuning with n_jobs=-1
2021-01-11 02:59:02,382:INFO:Initializing RandomizedSearchCV
2021-01-11 02:59:04,318:INFO:best_params: {'actual_estimator__num_leaves': 20, 'actual_estimator__max_depth': 43, 'actual_estimator__learning_rate': 0.1}
2021-01-11 02:59:04,319:INFO:Random search completed
2021-01-11 02:59:04,319:INFO:SubProcess create_model() called ==================================
2021-01-11 02:59:04,319:INFO:Initializing create_model()
2021-01-11 02:59:04,319:INFO:create_model(kwargs={'num_leaves': 20, 'max_depth': 43, 'learning_rate': 0.1}, display=<pycaret.internal.Display.Display object at 0x7f2e08476d30>, metrics=None, system=False, verbose=True, refit=True, groups=None, fit_kwargs={}, predict=True, cross_validation=True, round=4, fold=KFold(n_splits=10, random_state=123, shuffle=False), estimator=PowerTransformedTargetRegressor(border_count=254, loss_function='RMSE',
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=<catboost.core.CatBoostRegressor object at 0x7f2e08553a58>,
                                task_type='CPU', verbose=False))
2021-01-11 02:59:04,320:INFO:Checking exceptions
2021-01-11 02:59:04,320:INFO:Importing libraries
2021-01-11 02:59:04,320:INFO:Copying training dataset
2021-01-11 02:59:04,325:INFO:Defining folds
2021-01-11 02:59:04,325:INFO:Declaring metric variables
2021-01-11 02:59:04,346:INFO:Importing untrained model
2021-01-11 02:59:04,347:INFO:Declaring custom model
2021-01-11 02:59:04,367:INFO:CatBoost Regressor Imported succesfully
2021-01-11 02:59:04,406:INFO:Starting cross validation
2021-01-11 02:59:04,407:INFO:Cross validating with KFold(n_splits=10, random_state=123, shuffle=False), n_jobs=-1
2021-01-11 02:59:04,689:INFO:Calculating mean and std
2021-01-11 02:59:04,690:INFO:Creating metrics dataframe
2021-01-11 02:59:04,718:INFO:Finalizing model
2021-01-11 02:59:22,333:INFO:Initializing tune_model()
2021-01-11 02:59:22,334:INFO:tune_model(kwargs={}, display=None, tuner_verbose=True, verbose=True, return_tuner=False, groups=None, fit_kwargs=None, choose_better=False, early_stopping_max_iters=10, early_stopping=False, search_algorithm=None, search_library=scikit-learn, custom_scorer=None, optimize=R2, custom_grid={'num_leaves': array([ 10,  20,  30,  40,  50,  60,  70,  80,  90, 100, 110, 120, 130,
       140, 150, 160, 170, 180, 190]), 'max_depth': [10, 10, 11, 11, 12, 13, 13, 14, 14, 15, 16], 'learning_rate': array([0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9])}, n_iter=10, round=4, fold=None, estimator=PowerTransformedTargetRegressor(border_count=254, loss_function='RMSE',
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=<catboost.core.CatBoostRegressor object at 0x7f2e30549588>,
                                task_type='CPU', verbose=False))
2021-01-11 02:59:22,334:INFO:Checking exceptions
2021-01-11 02:59:22,334:INFO:Preparing display monitor
2021-01-11 02:59:22,374:INFO:Copying training dataset
2021-01-11 02:59:22,376:INFO:Checking base model
2021-01-11 02:59:22,376:INFO:Base model : CatBoost Regressor
2021-01-11 02:59:22,399:INFO:Declaring metric variables
2021-01-11 02:59:22,423:INFO:Defining Hyperparameters
2021-01-11 02:59:22,582:INFO:custom_grid: {'actual_estimator__num_leaves': array([ 10,  20,  30,  40,  50,  60,  70,  80,  90, 100, 110, 120, 130,
       140, 150, 160, 170, 180, 190]), 'actual_estimator__max_depth': [10, 10, 11, 11, 12, 13, 13, 14, 14, 15, 16], 'actual_estimator__learning_rate': array([0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9])}
2021-01-11 02:59:22,583:INFO:Tuning with n_jobs=-1
2021-01-11 02:59:22,583:INFO:Initializing RandomizedSearchCV
2021-01-11 02:59:24,493:INFO:best_params: {'actual_estimator__num_leaves': 20, 'actual_estimator__max_depth': 12, 'actual_estimator__learning_rate': 0.6}
2021-01-11 02:59:24,494:INFO:Random search completed
2021-01-11 02:59:24,494:INFO:SubProcess create_model() called ==================================
2021-01-11 02:59:24,494:INFO:Initializing create_model()
2021-01-11 02:59:24,494:INFO:create_model(kwargs={'num_leaves': 20, 'max_depth': 12, 'learning_rate': 0.6}, display=<pycaret.internal.Display.Display object at 0x7f2e08476320>, metrics=None, system=False, verbose=True, refit=True, groups=None, fit_kwargs={}, predict=True, cross_validation=True, round=4, fold=KFold(n_splits=10, random_state=123, shuffle=False), estimator=PowerTransformedTargetRegressor(border_count=254, loss_function='RMSE',
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=<catboost.core.CatBoostRegressor object at 0x7f2e08553e10>,
                                task_type='CPU', verbose=False))
2021-01-11 02:59:24,495:INFO:Checking exceptions
2021-01-11 02:59:24,495:INFO:Importing libraries
2021-01-11 02:59:24,497:INFO:Copying training dataset
2021-01-11 02:59:24,500:INFO:Defining folds
2021-01-11 02:59:24,500:INFO:Declaring metric variables
2021-01-11 02:59:24,521:INFO:Importing untrained model
2021-01-11 02:59:24,521:INFO:Declaring custom model
2021-01-11 02:59:24,540:INFO:CatBoost Regressor Imported succesfully
2021-01-11 02:59:24,579:INFO:Starting cross validation
2021-01-11 02:59:24,580:INFO:Cross validating with KFold(n_splits=10, random_state=123, shuffle=False), n_jobs=-1
2021-01-11 02:59:24,820:INFO:Calculating mean and std
2021-01-11 02:59:24,821:INFO:Creating metrics dataframe
2021-01-11 02:59:24,846:INFO:Finalizing model
2021-01-11 02:59:47,220:INFO:Initializing tune_model()
2021-01-11 02:59:47,220:INFO:tune_model(kwargs={}, display=None, tuner_verbose=True, verbose=True, return_tuner=False, groups=None, fit_kwargs=None, choose_better=False, early_stopping_max_iters=10, early_stopping=False, search_algorithm=None, search_library=scikit-learn, custom_scorer=None, optimize=R2, custom_grid={'num_leaves': array([10]), 'max_depth': [10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 110], 'learning_rate': array([0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9])}, n_iter=10, round=4, fold=None, estimator=PowerTransformedTargetRegressor(border_count=254, loss_function='RMSE',
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=<catboost.core.CatBoostRegressor object at 0x7f2e30549588>,
                                task_type='CPU', verbose=False))
2021-01-11 02:59:47,220:INFO:Checking exceptions
2021-01-11 02:59:47,220:INFO:Preparing display monitor
2021-01-11 02:59:47,264:INFO:Copying training dataset
2021-01-11 02:59:47,266:INFO:Checking base model
2021-01-11 02:59:47,266:INFO:Base model : CatBoost Regressor
2021-01-11 02:59:47,287:INFO:Declaring metric variables
2021-01-11 02:59:47,307:INFO:Defining Hyperparameters
2021-01-11 02:59:47,465:INFO:custom_grid: {'actual_estimator__num_leaves': array([10]), 'actual_estimator__max_depth': [10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 110], 'actual_estimator__learning_rate': array([0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9])}
2021-01-11 02:59:47,465:INFO:Tuning with n_jobs=-1
2021-01-11 02:59:47,465:INFO:Initializing RandomizedSearchCV
2021-01-11 02:59:49,373:INFO:best_params: {'actual_estimator__num_leaves': 10, 'actual_estimator__max_depth': 90, 'actual_estimator__learning_rate': 0.9}
2021-01-11 02:59:49,373:INFO:Random search completed
2021-01-11 02:59:49,374:INFO:SubProcess create_model() called ==================================
2021-01-11 02:59:49,374:INFO:Initializing create_model()
2021-01-11 02:59:49,374:INFO:create_model(kwargs={'num_leaves': 10, 'max_depth': 90, 'learning_rate': 0.9}, display=<pycaret.internal.Display.Display object at 0x7f2e08fb6240>, metrics=None, system=False, verbose=True, refit=True, groups=None, fit_kwargs={}, predict=True, cross_validation=True, round=4, fold=KFold(n_splits=10, random_state=123, shuffle=False), estimator=PowerTransformedTargetRegressor(border_count=254, loss_function='RMSE',
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=<catboost.core.CatBoostRegressor object at 0x7f2e08560358>,
                                task_type='CPU', verbose=False))
2021-01-11 02:59:49,374:INFO:Checking exceptions
2021-01-11 02:59:49,375:INFO:Importing libraries
2021-01-11 02:59:49,375:INFO:Copying training dataset
2021-01-11 02:59:49,379:INFO:Defining folds
2021-01-11 02:59:49,379:INFO:Declaring metric variables
2021-01-11 02:59:49,403:INFO:Importing untrained model
2021-01-11 02:59:49,403:INFO:Declaring custom model
2021-01-11 02:59:49,421:INFO:CatBoost Regressor Imported succesfully
2021-01-11 02:59:49,467:INFO:Starting cross validation
2021-01-11 02:59:49,469:INFO:Cross validating with KFold(n_splits=10, random_state=123, shuffle=False), n_jobs=-1
2021-01-11 02:59:49,706:INFO:Calculating mean and std
2021-01-11 02:59:49,707:INFO:Creating metrics dataframe
2021-01-11 02:59:49,732:INFO:Finalizing model
2021-01-11 03:00:35,212:INFO:Initializing tune_model()
2021-01-11 03:00:35,213:INFO:tune_model(kwargs={}, display=None, tuner_verbose=True, verbose=True, return_tuner=False, groups=None, fit_kwargs=None, choose_better=False, early_stopping_max_iters=10, early_stopping=False, search_algorithm=None, search_library=scikit-learn, custom_scorer=None, optimize=R2, custom_grid={'num_leaves': array([10]), 'max_depth': [10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 110], 'learning_rate': array([0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9])}, n_iter=16, round=4, fold=None, estimator=PowerTransformedTargetRegressor(border_count=254, loss_function='RMSE',
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=<catboost.core.CatBoostRegressor object at 0x7f2e30549588>,
                                task_type='CPU', verbose=False))
2021-01-11 03:00:35,213:INFO:Checking exceptions
2021-01-11 03:00:35,213:INFO:Preparing display monitor
2021-01-11 03:00:35,246:INFO:Copying training dataset
2021-01-11 03:00:35,247:INFO:Checking base model
2021-01-11 03:00:35,248:INFO:Base model : CatBoost Regressor
2021-01-11 03:00:35,267:INFO:Declaring metric variables
2021-01-11 03:00:35,286:INFO:Defining Hyperparameters
2021-01-11 03:00:35,439:INFO:custom_grid: {'actual_estimator__num_leaves': array([10]), 'actual_estimator__max_depth': [10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 110], 'actual_estimator__learning_rate': array([0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9])}
2021-01-11 03:00:35,439:INFO:Tuning with n_jobs=-1
2021-01-11 03:00:35,439:INFO:Initializing RandomizedSearchCV
2021-01-11 03:00:38,403:INFO:best_params: {'actual_estimator__num_leaves': 10, 'actual_estimator__max_depth': 90, 'actual_estimator__learning_rate': 0.9}
2021-01-11 03:00:38,404:INFO:Random search completed
2021-01-11 03:00:38,404:INFO:SubProcess create_model() called ==================================
2021-01-11 03:00:38,405:INFO:Initializing create_model()
2021-01-11 03:00:38,405:INFO:create_model(kwargs={'num_leaves': 10, 'max_depth': 90, 'learning_rate': 0.9}, display=<pycaret.internal.Display.Display object at 0x7f2e0679c5f8>, metrics=None, system=False, verbose=True, refit=True, groups=None, fit_kwargs={}, predict=True, cross_validation=True, round=4, fold=KFold(n_splits=10, random_state=123, shuffle=False), estimator=PowerTransformedTargetRegressor(border_count=254, loss_function='RMSE',
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=<catboost.core.CatBoostRegressor object at 0x7f2e085531d0>,
                                task_type='CPU', verbose=False))
2021-01-11 03:00:38,405:INFO:Checking exceptions
2021-01-11 03:00:38,405:INFO:Importing libraries
2021-01-11 03:00:38,405:INFO:Copying training dataset
2021-01-11 03:00:38,407:INFO:Defining folds
2021-01-11 03:00:38,407:INFO:Declaring metric variables
2021-01-11 03:00:38,428:INFO:Importing untrained model
2021-01-11 03:00:38,428:INFO:Declaring custom model
2021-01-11 03:00:38,452:INFO:CatBoost Regressor Imported succesfully
2021-01-11 03:00:38,499:INFO:Starting cross validation
2021-01-11 03:00:38,499:INFO:Cross validating with KFold(n_splits=10, random_state=123, shuffle=False), n_jobs=-1
2021-01-11 03:00:38,735:INFO:Calculating mean and std
2021-01-11 03:00:38,736:INFO:Creating metrics dataframe
2021-01-11 03:00:38,761:INFO:Finalizing model
2021-01-11 03:08:16,477:INFO:Initializing finalize_model()
2021-01-11 03:08:16,478:INFO:finalize_model(display=None, model_only=True, groups=None, fit_kwargs=None, estimator=PowerTransformedTargetRegressor(border_count=254, depth=9, l2_leaf_reg=5,
                                loss_function='RMSE', n_estimators=260,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123, random_strength=0.5,
                                regressor=<catboost.core.CatBoostRegressor object at 0x7f2e06794898>,
                                task_type='CPU', verbose=False))
2021-01-11 03:08:16,478:INFO:Finalizing PowerTransformedTargetRegressor(border_count=254, depth=9, l2_leaf_reg=5,
                                loss_function='RMSE', n_estimators=260,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123, random_strength=0.5,
                                regressor=<catboost.core.CatBoostRegressor object at 0x7f2e06794898>,
                                task_type='CPU', verbose=False)
2021-01-11 03:08:16,479:INFO:Initializing create_model()
2021-01-11 03:08:16,479:INFO:create_model(kwargs={}, display=None, metrics=None, system=False, verbose=False, refit=True, groups=None, fit_kwargs={}, predict=True, cross_validation=True, round=4, fold=None, estimator=PowerTransformedTargetRegressor(border_count=254, depth=9, l2_leaf_reg=5,
                                loss_function='RMSE', n_estimators=260,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123, random_strength=0.5,
                                regressor=<catboost.core.CatBoostRegressor object at 0x7f2e06794898>,
                                task_type='CPU', verbose=False))
2021-01-11 03:08:16,480:INFO:Checking exceptions
2021-01-11 03:08:16,480:INFO:Importing libraries
2021-01-11 03:08:16,481:INFO:Copying training dataset
2021-01-11 03:08:16,482:INFO:Defining folds
2021-01-11 03:08:16,482:INFO:Declaring metric variables
2021-01-11 03:08:16,482:INFO:Importing untrained model
2021-01-11 03:08:16,482:INFO:Declaring custom model
2021-01-11 03:08:16,483:INFO:CatBoost Regressor Imported succesfully
2021-01-11 03:08:16,483:INFO:Starting cross validation
2021-01-11 03:08:16,484:INFO:Cross validating with KFold(n_splits=10, random_state=123, shuffle=False), n_jobs=-1
2021-01-11 03:08:25,583:INFO:Calculating mean and std
2021-01-11 03:08:25,584:INFO:Creating metrics dataframe
2021-01-11 03:08:25,589:INFO:Finalizing model
2021-01-11 03:08:26,288:INFO:Uploading results into container
2021-01-11 03:08:26,288:INFO:Uploading model into container now
2021-01-11 03:08:26,288:INFO:create_model_container: 30
2021-01-11 03:08:26,288:INFO:master_model_container: 30
2021-01-11 03:08:26,288:INFO:display_container: 16
2021-01-11 03:08:26,289:INFO:PowerTransformedTargetRegressor(border_count=254, depth=9, l2_leaf_reg=5,
                                loss_function='RMSE', n_estimators=260,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123, random_strength=0.5,
                                regressor=<catboost.core.CatBoostRegressor object at 0x7f2e40f3f208>,
                                task_type='CPU', verbose=False)
2021-01-11 03:08:26,289:INFO:create_model() succesfully completed......................................
2021-01-11 03:08:26,462:INFO:Creating MLFlow logs
2021-01-11 03:08:26,465:INFO:Model: CatBoost Regressor
2021-01-11 03:08:26,482:INFO:logged params: {'nan_mode': 'Min', 'eval_metric': 'RMSE', 'iterations': 260, 'sampling_frequency': 'PerTree', 'leaf_estimation_method': 'Newton', 'grow_policy': 'SymmetricTree', 'penalties_coefficient': 1, 'boosting_type': 'Plain', 'model_shrink_mode': 'Constant', 'feature_border_type': 'GreedyLogSum', 'bayesian_matrix_reg': 0.10000000149011612, 'l2_leaf_reg': 5, 'random_strength': 0.5, 'rsm': 1, 'boost_from_average': True, 'model_size_reg': 0.5, 'subsample': 0.800000011920929, 'use_best_model': False, 'random_seed': 123, 'depth': 9, 'posterior_sampling': False, 'border_count': 254, 'classes_count': 0, 'auto_class_weights': 'None', 'sparse_features_conflict_fraction': 0, 'leaf_estimation_backtracking': 'AnyImprovement', 'best_model_min_trees': 1, 'model_shrink_rate': 0, 'min_data_in_leaf': 1, 'loss_function': 'RMSE', 'learning_rate': 0.029999999329447743, 'score_function': 'Cosine', 'task_type': 'CPU', 'leaf_estimation_iterations': 1, 'bootstrap_type': 'MVS', 'max_leaves': 512}
2021-01-11 03:08:26,517:INFO:Initializing predict_model()
2021-01-11 03:08:26,517:INFO:predict_model(display=None, ml_usecase=None, verbose=False, round=4, encoded_labels=False, probability_threshold=None, estimator=PowerTransformedTargetRegressor(border_count=254, depth=9, l2_leaf_reg=5,
                                loss_function='RMSE', n_estimators=260,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123, random_strength=0.5,
                                regressor=<catboost.core.CatBoostRegressor object at 0x7f2e40f3f208>,
                                task_type='CPU', verbose=False))
2021-01-11 03:08:26,517:INFO:Checking exceptions
2021-01-11 03:08:26,517:INFO:Preloading libraries
2021-01-11 03:08:26,971:INFO:create_model_container: 30
2021-01-11 03:08:26,972:INFO:master_model_container: 30
2021-01-11 03:08:26,972:INFO:display_container: 15
2021-01-11 03:08:26,972:INFO:PowerTransformedTargetRegressor(border_count=254, depth=9, l2_leaf_reg=5,
                                loss_function='RMSE', n_estimators=260,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123, random_strength=0.5,
                                regressor=<catboost.core.CatBoostRegressor object at 0x7f2e40f3f208>,
                                task_type='CPU', verbose=False)
2021-01-11 03:08:26,972:INFO:finalize_model() succesfully completed......................................
2021-01-11 03:09:35,503:INFO:Initializing predict_model()
2021-01-11 03:09:35,503:INFO:predict_model(display=None, ml_usecase=MLUsecase.REGRESSION, verbose=True, round=4, encoded_labels=True, probability_threshold=None, estimator=PowerTransformedTargetRegressor(border_count=254, depth=9, l2_leaf_reg=5,
                                loss_function='RMSE', n_estimators=260,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123, random_strength=0.5,
                                regressor=<catboost.core.CatBoostRegressor object at 0x7f2e40f3f208>,
                                task_type='CPU', verbose=False))
2021-01-11 03:09:35,503:INFO:Checking exceptions
2021-01-11 03:09:35,503:INFO:Preloading libraries
2021-01-11 03:09:35,504:INFO:Preparing display monitor
2021-01-11 03:11:12,755:INFO:Initializing save_model()
2021-01-11 03:11:12,755:INFO:save_model(verbose=True, prep_pipe_=Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='Price',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='...
                ('dummy', Dummify(target='Price')),
                ('fix_perfect', Remove_100(target='Price')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'),
                ('fix_multi',
                 Fix_multicollinearity(correlation_with_target_preference=None,
                                       correlation_with_target_threshold=0.0,
                                       target_variable='Price',
                                       threshold=0.95)),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False), model_name=Final CatBoost Model 11JAN2021, model=PowerTransformedTargetRegressor(border_count=254, depth=9, l2_leaf_reg=5,
                                loss_function='RMSE', n_estimators=260,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123, random_strength=0.5,
                                regressor=<catboost.core.CatBoostRegressor object at 0x7f2e40f3f208>,
                                task_type='CPU', verbose=False))
2021-01-11 03:11:12,755:INFO:Adding model into prep_pipe
2021-01-11 03:11:12,787:INFO:Final CatBoost Model 11JAN2021.pkl saved in current working directory
2021-01-11 03:11:12,795:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=[], target='Price',
                                      time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='...
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model',
                 PowerTransformedTargetRegressor(border_count=254, depth=9,
                                                 l2_leaf_reg=5,
                                                 loss_function='RMSE',
                                                 n_estimators=260,
                                                 power_transformer_method='box-cox',
                                                 power_transformer_standardize=True,
                                                 random_state=123,
                                                 random_strength=0.5,
                                                 regressor=<catboost.core.CatBoostRegressor object at 0x7f2e40f3f208>,
                                                 task_type='CPU',
                                                 verbose=False)]],
         verbose=False)
2021-01-11 03:11:12,795:INFO:save_model() succesfully completed......................................
